{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","data","this","props","react_default","a","createElement","Table_default","striped","bordered","hover","responsive","display_DisplayHeader","display_DisplayBody","rows","Component","DisplayHeader","class","DisplayBody","map","row","index","dateTimeStr","Date","pricedata","lasttradedatetime","toLocaleString","changePercent","changepercent","toFixed","textColor","change","key","symbolstring","last","GetQuote","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getQuote","axios","get","state","symbol","token","then","res","quote","console","log","exchange","setState","objectSpread","message","handleSubmit","noSuchSymbol","catch","err","response","status","headers","handleInputChange","event","target","value","disableGet","undefined","length","displayMessage","Container_default","Form_default","autoComplete","onSubmit","e","preventDefault","Group","as","Row","controlId","Label","column","xs","Col_default","Control","type","onChange","Button_default","onClick","Alert_default","variant","App","latestQuotes","concat","toConsumableArray","input","display","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8eba86a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   render() {\r\n      const { data } = this.props;\r\n      return (\r\n         <Table striped bordered hover responsive>\r\n            <DisplayHeader />\r\n            <DisplayBody rows={data} />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr class=\"text-right\">\r\n            <th class=\"text-left\">Local Date/Time</th>\r\n            <th>Symbol</th>\r\n            <th>Price</th>\r\n            <th>CHG($)</th>\r\n            <th>CHG(%)</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateTimeStr = new Date(row.pricedata.lasttradedatetime).toLocaleString('en-CA');\r\n      const changePercent = row.pricedata.changepercent.toFixed(2) + \"%\";\r\n      const textColor = row.pricedata.change === 0 ? \"text-dark\"\r\n         : (row.pricedata.change > 0 ? \"text-success\" : \"text-danger\");\r\n\r\n      return (\r\n\r\n         <tr key={index} class=\"text-right\">\r\n            <td class=\"text-left\">{dateTimeStr}</td>\r\n            <td>{row.symbolstring}</td>\r\n            <td>{row.pricedata.last}</td>\r\n            <td class={textColor}>{row.pricedata.change}</td>\r\n            <td class={textColor}>{changePercent}</td>\r\n         </tr >\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { symbol: null, message: null }\r\n   }\r\n\r\n   getQuote = () => {\r\n      axios.get('/quote?symbol=' + this.state.symbol + '&token=' + this.props.token)\r\n         .then(res => {\r\n            const quote = res.data;\r\n            console.log(\"Got quote info ... \");\r\n            console.log(quote);\r\n            const exchange = quote.key.exchange;\r\n            if (exchange) {\r\n               console.log(\"SUCCESS!\");\r\n               this.setState({ ...this.state, \"message\": null });\r\n               this.props.handleSubmit(quote);\r\n            } else {\r\n               const noSuchSymbol = \"Cannot find any exchanges with entered quote - \" + this.state.symbol;\r\n               console.log(noSuchSymbol);\r\n               this.setState({ ...this.state, \"message\": noSuchSymbol });\r\n            }\r\n         })\r\n         .catch(err => {\r\n            console.log(err);\r\n            if (err.response) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               console.log(err.response.data);\r\n               console.log(err.response.status);\r\n               console.log(err.response.headers);\r\n               this.setState({ ...this.state, \"message\":  err.response.data});\r\n             } else {\r\n               this.setState({ ...this.state, \"message\":  \"Oops, something went wrong!\"}); \r\n             }\r\n            \r\n         });\r\n   }\r\n\r\n   handleInputChange = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayMessage = this.state.message === null ? false : true;\r\n      return (\r\n         <Container>\r\n\r\n            <Form autoComplete=\"off\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                  <Form.Label column xs=\"2\">\r\n                     Quote:\r\n                  </Form.Label>\r\n                  <Col xs=\"8\">\r\n                     <Form.Control type=\"text\" onChange={this.handleInputChange} />\r\n                  </Col>\r\n                  {disableGet ? null : <Button xs=\"2\" onClick={this.getQuote}>GO</Button>}\r\n               </Form.Group>\r\n            </Form>\r\n            {displayMessage ? <Alert variant='warning'>{this.state.message}</Alert> : null}\r\n         </Container >\r\n      )\r\n   }\r\n}\r\nexport default GetQuote;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from './display';\nimport GetQuote from './input';\nimport Container from 'react-bootstrap/Container';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { latestQuotes: [] }        \n   }\n\n   getQuote = quote => {\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes]});\n   }\n\n   render() {\n      \n      return (\n         <Container>\n            <h1 class=\"text-center\">FREE Real-Time Stock Quotes from TSX</h1>\n            <p class=\"lead\">You can get real-time stock quotes from Toronto Stock Exchange for FREE!</p>\n            <GetQuote handleSubmit={this.getQuote} token='992b6fbbb2d687159ec1282417cb62a6bf110b7d49adf0fc779c0c68db1c51fc'/>\n            { this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\n         </Container>\n      );\n   }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}