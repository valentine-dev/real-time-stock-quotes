{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","props","toggleShowDate","status","setState","showDate","toggleShowVolume","showVolume","toggleShowDiff","showDiff","state","data","this","Table","striped","bordered","hover","responsive","size","showStates","handleToggleShowDate","handleToggleShowVolume","handleToggleShowDiff","rows","Component","DisplayHeader","className","style","width","Button","variant","disabled","role","aria-label","onClick","DisplayBody","map","row","index","dateStr","Date","regularMarketTime","raw","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","changePercent","regularMarketChangePercent","fmt","change","regularMarketChange","textColor","colonIndex","symbol","indexOf","price","regularMarketPrice","volume","regularMarketVolume","symColor","slice","toLowerCase","symbolString","currency","toUpperCase","key","GetQuote","getQuote","exchange","axios","get","then","res","quotes","quoteResponse","result","length","message","longName","shortName","fullExchangeName","handleSubmit","catch","err","response","includes","name","code","handleSymbolUpdate","event","target","value","trim","handleExchangeUpdate","e","errorMessage","disableGet","undefined","displayError","displayMessage","Container","Alert","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","type","autoCorrect","autoCapitalize","msg","DisplayMessage","useState","show","setShow","Toast","delay","autohide","onClose","Body","require","config","App","quote","latestQuotes","Navbar","bg","sticky","expand","Brand","href","title","Badge","process","Toggle","aria-controls","Collapse","id","Nav","Link","token","Notes","dismissible","Heading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33faf5d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showVolume: false, showDiff: false}\r\n   }\r\n\r\n   toggleShowDate = (status) => {      \r\n      status ? this.setState({showDate: false}) : this.setState({showDate: true});\r\n   } \r\n\r\n   toggleShowVolume = (status) => {      \r\n      status ? this.setState({showVolume: false}) : this.setState({showVolume: true});\r\n   }\r\n\r\n   toggleShowDiff = (status) => {      \r\n      status ? this.setState({showDiff: false}) : this.setState({showDiff: true});\r\n   }\r\n\r\n   render() {\r\n      const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader \r\n               showStates={this.state} \r\n               handleToggleShowDate={this.toggleShowDate} \r\n               handleToggleShowVolume={this.toggleShowVolume}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n            />\r\n            <DisplayBody \r\n               rows={data} \r\n               showStates={this.state}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   //console.log(props);\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\"> \r\n            <th className=\"text-left\" style={{width: '25%'}}>\r\n            <Button variant=\"light\" disabled><span role=\"img\" aria-label=\"Symbol\">&#x1F4C8;</span></Button>\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showDate ? <Button variant=\"light\" onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button variant=\"light\" onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showVolume ? <Button variant=\"light\" onClick={() => props.handleToggleShowVolume(props.showStates.showVolume)}><span role=\"img\" aria-label=\"Volume\">&#x1F4CA;</span></Button> : <Button variant=\"light\" onClick={() => props.handleToggleShowVolume(props.showStates.showVolume)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>{props.showStates.showDiff ? <Button variant=\"light\" onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button variant=\"light\" onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateOptions = { month: 'numeric', day: 'numeric' };\r\n      const dateStr = new Date(row.regularMarketTime.raw*1000).toLocaleDateString('en-CA', dateOptions);\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = new Date(row.regularMarketTime.raw*1000).toLocaleTimeString('en-CA', timeOptions);\r\n      const changePercent = row.regularMarketChangePercent.fmt;\r\n      const change = row.regularMarketChange.fmt;\r\n      const textColor = row.regularMarketChange.raw === 0 ? \"text-dark\"\r\n         : (row.regularMarketChange.raw > 0 ? \"text-success\" : \"text-danger\");\r\n      const colonIndex = row.symbol.indexOf('.');\r\n      const price = row.regularMarketPrice.fmt;\r\n      const volume = row.regularMarketVolume.fmt;\r\n\r\n      const symColor = colonIndex > -1 ? \r\n         (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"text-primary\" : \r\n           (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"text-danger\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"text-dark\" : \r\n                \"text-warning\" \r\n              )\r\n           )           \r\n         ) : \"text-success\";\r\n\r\n      const symbolString = colonIndex > -1 ? row.symbol.slice(0,colonIndex) : row.symbol;\r\n      const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\" ;\r\n      return (\r\n\r\n         <tr key={index} className=\"text-right\">\r\n            <td className={symColor + \" text-left font-weight-bold\"}>{symbolString}</td>\r\n            <td>\r\n            {props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n            </td>\r\n            <td>\r\n               {props.showStates.showVolume ? <span>{volume}</span>: <span>{currency}{price}</span> }\r\n            </td>\r\n            <td className={textColor}>\r\n               {props.showStates.showDiff ? <span>{change}</span> : <span>{changePercent}</span> }\r\n            </td>\r\n         </tr>\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;\r\n","import React, { useState, Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: null, symbol: null, errorMessage: null, message: null}\r\n   }\r\n\r\n   getQuote = () => {\r\n      const symbol = this.state.exchange === \"TSX\" ? this.state.symbol.toLowerCase() + \".to\"\r\n         : (this.state.exchange === \"CSE\" ? this.state.symbol.toLowerCase() + \".cn\" \r\n         : (this.state.exchange === \"TSXV\"? this.state.symbol.toLowerCase() + \".v\" \r\n         : (this.state.exchange === \"NEO\"? this.state.symbol.toLowerCase() + \".ne\" : this.state.symbol)));\r\n      axios.get('https://enjoyit-cors-anywhere.herokuapp.com/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + symbol)\r\n         .then(res => {\r\n            //console.log(res);\r\n            const quotes = res.data.quoteResponse.result;\r\n            //console.log(quote);\r\n            if (quotes && quotes.length >  0) {\r\n               //console.log(\"Got last price ... \");\r\n               const message = quotes[0].longName ?  quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                  : (quotes[0].shortName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName : null);\r\n               if (message) {\r\n                  this.setState({ ...this.state, \"errorMessage\": null, 'message': message });\r\n                  this.props.handleSubmit(quotes[0]);\r\n               } else {\r\n                  this.setState({ ...this.state, \"errorMessage\": \"Sorry, no data found.\" });\r\n               }               \r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Sorry, no data found.\" });\r\n            }\r\n         })\r\n         .catch(err => {\r\n            //console.log(err);\r\n            let message;\r\n            if (err.response && err.response.data) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               //console.log(err.response.data);\r\n               //console.log(err.response.status);\r\n               //console.log(err.response.headers);\r\n               if (typeof err.response.data === 'string') {\r\n                  message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n               } else {\r\n                  message = err.response.data.name + \": \" + err.response.data.message;\r\n               } \r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               message = err.name + ' (' + err.code + '): ' + err.message;\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            }\r\n         });\r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value.trim(), \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ ...this.state, \"exchange\": e.target.value, \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayError = this.state.errorMessage === null ? false : true;\r\n      const displayMessage = this.state.message === null ? false : true;\r\n\r\n      return (\r\n         <Container>\r\n            <Alert variant='info'>\r\n            <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} >\r\n                  <Col xs=\"4\">\r\n                     <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\">\r\n                        <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                        <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                        <option value=\"TSXV\" className='text-dark font-weight-bold'>TSV</option>\r\n                        <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                        <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                     </Form.Control>\r\n                  </Col>\r\n                  <Col xs=\"5\">\r\n                     <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder=\"Symbol\" />\r\n                  </Col>\r\n                  {disableGet ? <Col xs=\"2\"><Button variant=\"info\" onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                     : <Col xs=\"2\"><Button onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                  }\r\n               </Form.Group>\r\n            </Form>\r\n            </Alert>\r\n            {displayMessage ? <div className='pb-3'><DisplayMessage msg={this.state.message}/></div>: null}\r\n            {displayError ? <Alert variant='warning'>{this.state.errorMessage}</Alert> : null}\r\n         </Container>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayMessage = props => {\r\n   const msg = props.msg;\r\n   const [show, setShow] = useState(true);\r\n\r\n   \r\n   return (\r\n      <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n   )\r\n   \r\n};\r\n\r\nexport default GetQuote;\r\n","import React, { useState, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Display from './display';\r\nimport GetQuote from './input';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nrequire('dotenv').config();\r\n\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { latestQuotes: [] }\r\n   }\r\n\r\n   getQuote = quote => {\r\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes] });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                  <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                  <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>   \r\n               </Navbar.Collapse>\r\n            </Navbar>            \r\n            <Notes />\r\n            <GetQuote handleSubmit={this.getQuote} token={process.env.REACT_APP_TOKEN} />\r\n            {this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nconst Notes = () => {\r\n   const [show, setShow] = useState(true);\r\n\r\n   if (show) {\r\n      return (\r\n         <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n            <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n            <p>For non-common stocks, Yahoo! Finance convention is used.</p>            \r\n         </Alert>         \r\n      )\r\n   }\r\n   return <></>;\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}