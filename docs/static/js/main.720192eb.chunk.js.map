{"version":3,"sources":["component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/App/App.jsx","index.js"],"names":["QuoteDisplay","props","toggleShowDate","status","setState","showDate","toggleShowRange","showRange","toggleShowDiff","showDiff","state","Table","striped","bordered","hover","responsive","size","showStates","this","handleToggleShowDate","handleToggleShowRange","handleToggleShowDiff","rows","data","handleSubmit","Component","DisplayHeader","className","style","width","Button","border","background","padding","disabled","role","aria-label","onClick","color","DisplayBody","handleRowSubmit","exchange","symbol","toLowerCase","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","regularMarketPrice","marketState","postMarketTime","postMarketChangePercent","postMarketChange","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","key","ProgressBar","variant","min","now","max","MessageDisplay","msg","useState","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleSymbolUpdate","event","target","value","trim","handleInputChange","handleExchangeUpdate","e","date","timerID","setInterval","tick","clearInterval","disableGet","undefined","length","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","title","SymbolExchangeInputEnabler","handleClick","Notes","Alert","dismissible","Heading","require","config","App","removeMessage","updateQuotes","quote","updatedQuotes","latestQuotes","quoteNums","foundMatching","postMarketPrice","showSymbolExchangeInput","yahooSymbol","axios","get","process","then","res","quotes","quoteResponse","result","message","longName","shortName","fullExchangeName","catch","err","response","includes","name","code","toggleSymbolExchangeInputShow","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","id","Nav","Link","Note","errorMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.720192eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass QuoteDisplay extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showRange: false, showDiff: false}\r\n   }\r\n\r\n   toggleShowDate = (status) => {      \r\n      status ? this.setState({showDate: false}) : this.setState({showDate: true});\r\n   } \r\n\r\n   toggleShowRange = (status) => {      \r\n      status ? this.setState({showRange: false}) : this.setState({showRange: true});\r\n   }\r\n\r\n   toggleShowDiff = (status) => {      \r\n      status ? this.setState({showDiff: false}) : this.setState({showDiff: true});\r\n   }\r\n\r\n   render() {\r\n      //const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader \r\n               showStates={this.state} \r\n               handleToggleShowDate={this.toggleShowDate} \r\n               handleToggleShowRange={this.toggleShowRange}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n            />\r\n            <DisplayBody \r\n               rows={this.props.data} \r\n               showStates={this.state}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   //console.log(props);\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\"> \r\n            <th className=\"text-left\" style={{width: '25%'}}>\r\n            <Button style={{border: 'none', background: 'none', padding: 0}} disabled><span role=\"img\" aria-label=\"Symbol\">&#x1F4C8;</span></Button>\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showDate ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}}  onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button className=\"shadow-none\"  style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showRange ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>{props.showStates.showDiff ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nclass DisplayBody extends Component {\r\n\r\n   handleRowSubmit = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false);\r\n   }\r\n\r\n   render() {\r\n      const rows = this.props.rows.map((row, index) => {\r\n         // independent of market state\r\n         const dateOptions = { month: 'numeric', day: 'numeric' };\r\n         const timeOptions = { hour12: false };    \r\n         const dayLow = row.regularMarketDayLow.fmt;\r\n         const dayHigh = row.regularMarketDayHigh.fmt;\r\n         const colonIndex = row.symbol.indexOf('.');\r\n         const symbolString = colonIndex > -1 ? row.symbol.slice(0,colonIndex) : row.symbol;\r\n         const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\" ;  \r\n         const symColor = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"primary\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"danger\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"dark\" : \r\n                   \"warning\" \r\n                 )\r\n              )           \r\n            ) : \"success\";\r\n         const exchange = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"tsx\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"cse\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"tsxv\" : \r\n                   \"neo\" \r\n                 )\r\n              )           \r\n            ) : \"us\";\r\n\r\n         // market state dependent\r\n         let marketTime = row.regularMarketTime.raw;\r\n         let changePercent = row.regularMarketChangePercent.fmt;\r\n         let formattedChange = row.regularMarketChange.fmt;\r\n         let change = row.regularMarketChange.raw;\r\n         let price = row.regularMarketPrice.fmt;\r\n         if (row.marketState === 'POST' && row.postMarketTime ) {\r\n            marketTime = row.postMarketTime.raw;\r\n            changePercent = row.postMarketChangePercent.fmt;\r\n            formattedChange = row.postMarketChange.fmt;\r\n            change = row.postMarketChange.raw;\r\n            price = row.regularMarketPrice.fmt;            \r\n         }\r\n\r\n         const dateStr = new Date(marketTime*1000).toLocaleDateString('en-CA', dateOptions);\r\n         const timeStr = new Date(marketTime*1000).toLocaleTimeString('en-CA', timeOptions);\r\n         const textColor = change === 0 ? \"text-dark\" : (change > 0 ? \"text-success\" : \"text-danger\");\r\n   \r\n         return (\r\n   \r\n            <tr key={exchange+\"-\"+symbolString} className=\"text-right\" onClick={() => this.handleRowSubmit(exchange, symbolString)}>\r\n               <td className={\"text-\" + symColor + \" text-left font-weight-bold\"}>{symbolString}</td>\r\n               <td>\r\n               {this.props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n               </td>\r\n               <td className='align-middle'>\r\n                  {this.props.showStates.showRange ? <ProgressBar variant={symColor} min={dayLow} now={price} max={dayHigh}/>: <span>{currency}{price}</span> }\r\n               </td>\r\n               <td className={textColor}>\r\n                  {this.props.showStates.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span> }\r\n               </td>\r\n            </tr>\r\n         )\r\n      });\r\n   \r\n      return <tbody>{rows}</tbody>;\r\n   }\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: null, date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {            \r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);      \r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      this.setState({ \"symbol\": event.target.value.trim() });\r\n      this.props.handleInputChange();\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n         <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n            <Form.Group as={Row}>\r\n               <Col xs=\"4\">\r\n                  <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                     <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                     <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                     <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                     <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                     <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                  </Form.Control>\r\n               </Col>\r\n               <Col xs=\"6\">\r\n                  <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder={\"symbol-\" + timeStr} size=\"sm\" />\r\n               </Col>\r\n               {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                  : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n               }\r\n            </Form.Group>\r\n         </Form>       \r\n      </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInputEnabler extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { date: new Date() }\r\n   }\r\n\r\n   handleClick = () => {\r\n      this.props.onClick();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n      \r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n        <Container className='mt-3 md-3'>\r\n            <Row>\r\n                <Col className=\"my-auto\">{timeStr}</Col>\r\n                <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n            </Row>               \r\n        </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>For non-common stocks, Yahoo! Finance convention is used.</p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n    constructor(props) {\r\n       super(props);\r\n       this.state = { latestQuotes: [], \"errorMessage\": null, 'message': null, showSymbolExchangeInput : true }       \r\n    }\r\n \r\n    removeMessage = () => {\r\n       this.setState({ \"errorMessage\": null, 'message': null });\r\n    }\r\n \r\n    updateQuotes = (quote) => {\r\n       let updatedQuotes = [...this.state.latestQuotes];\r\n       const quoteNums = this.state.latestQuotes.length;\r\n       let foundMatching = false;\r\n       for (let index = 0; index < quoteNums; index++) {\r\n          let row = updatedQuotes[index];\r\n          if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = {...quote.regularMarketDayHigh};\r\n            row.regularMarketDayLow = {...quote.regularMarketDayLow};\r\n            row.regularMarketChangePercent = {...quote.regularMarketChangePercent};\r\n            row.regularMarketChange = {...quote.regularMarketChange};\r\n            row.regularMarketPrice = {...quote.regularMarketPrice};\r\n            row.regularMarketTime = {...quote.regularMarketTime};\r\n            if (quote.marketState === \"POST\" && quote.postMarketTime) {\r\n               row.postMarketPrice = {...quote.postMarketPrice};\r\n               row.postMarketTime = {...quote.postMarketTime};\r\n               row.postMarketChangePercent = {...quote.postMarketChangePercent};\r\n               row.postMarketChange = {...quote.postMarketChange}\r\n            }\r\n            break;\r\n          } \r\n       }\r\n \r\n       if (!foundMatching) {\r\n          updatedQuotes = [quote, ...updatedQuotes];\r\n       }\r\n \r\n       this.setState({ latestQuotes: updatedQuotes });\r\n    }\r\n \r\n    getQuote = (symbol, exchange, show) => {\r\n\r\n      this.setState({showSymbolExchangeInput : show});\r\n       //console.log(\"index.js - symbol: \" + symbol);\r\n       //console.log(\"index.js - exchange: \" + exchange);\r\n       const yahooSymbol = exchange === \"tsx\" ? symbol + \".to\"\r\n       : (exchange === \"cse\" ? symbol + \".cn\" \r\n       : (exchange === \"tsxv\"? symbol + \".v\" \r\n       : (exchange === \"neo\"? symbol + \".ne\" : symbol)));\r\n             \r\n       axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n          .then(res => {\r\n             //console.log(res);\r\n             const quotes = res.data.quoteResponse.result;\r\n             //console.log(quotes);\r\n             if (quotes && quotes.length >  0) {\r\n                //console.log(\"Got last price ... \");\r\n                const message = quotes[0].longName ?  quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                   : (quotes[0].shortName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName : null);\r\n                //console.log(message);\r\n                if (message) {\r\n                   this.setState({\"errorMessage\": null, 'message': message });\r\n                   this.updateQuotes(quotes[0]);\r\n                } else {\r\n                   this.setState({ \"errorMessage\": \"Sorry, no data found.\" });\r\n                }               \r\n             } else {\r\n                this.setState({ \"errorMessage\": \"Sorry, no data found.\" });\r\n             }\r\n          })\r\n          .catch(err => {\r\n             //console.log(err);\r\n             let message;\r\n             if (err.response && err.response.data) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                //console.log(err.response.data);\r\n                //console.log(err.response.status);\r\n                //console.log(err.response.headers);\r\n                if (typeof err.response.data === 'string') {\r\n                   message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                } else {\r\n                   message = err.response.data.name + \": \" + err.response.data.message;\r\n                } \r\n                this.setState({ \"errorMessage\": message });\r\n             } else {\r\n                message = err.name + ' (' + err.code + '): ' + err.message;\r\n                this.setState({ \"errorMessage\": message });\r\n             }\r\n          });   \r\n    }\r\n\r\n    toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n    }\r\n \r\n    render() {\r\n       return (\r\n          <Container>\r\n             <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n                <Navbar.Brand>\r\n                   <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                   <Nav>\r\n                   <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                   <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                   </Nav>   \r\n                </Navbar.Collapse>\r\n             </Navbar>            \r\n             <Note />\r\n             {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuote} handleInputChange={this.removeMessage} /> \r\n                                                 : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} /> }\r\n             {this.state.message && <MessageDisplay msg={this.state.message}/>}\r\n             {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n             {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuote} />}\r\n          </Container>\r\n       );\r\n    }\r\n }\r\n\r\n export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}