{"version":3,"sources":["component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/App/App.jsx","index.js"],"names":["QuoteDisplay","props","toggleShowDate","status","setState","showDate","toggleShowRange","showRange","toggleShowDiff","showDiff","state","Table","striped","bordered","hover","responsive","size","showStates","this","handleToggleShowDate","handleToggleShowRange","handleToggleShowDiff","rows","data","handleSubmit","Component","DisplayHeader","className","style","width","Button","boxShadow","border","background","padding","onClick","role","aria-label","color","DisplayBody","refreshQuote","exchange","symbol","toLowerCase","refreshChart","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","regularPrice","regularMarketPrice","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","marketState","postMarketTime","preMarketTime","preMarketChangePercent","preMarketChange","preMarketPrice","postMarketChangePercent","postMarketChange","postMarketPrice","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","key","OverlayTrigger","overlay","Tooltip","id","ProgressBar","variant","min","now","max","label","MessageDisplay","msg","useState","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleInputChange","handleSymbolUpdate","event","regex","RegExp","target","value","trim","test","handleExchangeUpdate","e","date","timerID","setInterval","tick","clearInterval","disableGet","undefined","length","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","title","disabled","SymbolExchangeInputEnabler","handleClick","Notes","Alert","dismissible","Heading","require","config","App","updateMessage","errMsg","updateQuotes","quote","updatedQuotes","latestQuotes","quoteNums","foundMatching","getQuoteChart","showChart","yahooSymbol","showSymbolExchangeInput","axios","get","process","then","res","chartArray","chart","result","timeStamps","timestamp","x","y","indicators","close","previousClose","meta","errorMessage","error","code","description","catch","err","message","response","includes","name","quotes","quoteResponse","longName","fullExchangeName","shortName","toggleSymbolExchangeInputShow","handleCloseChart","filter","time","hour","minute","Math","round","tick1","tick2","tick3","tick4","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","Nav","Link","Note","Modal","onHide","at","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickLine","tickSize","axisLine","fontSize","ticks","YAxis","domain","orientation","formatter","separator","contentStyle","content","active","payload","backgroundColor","ReferenceLine","stroke","alwaysShow","Label","position","fontWeight","Area","fill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4bda5e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './QuoteDisplay.css';\r\nimport { Button, ProgressBar, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass QuoteDisplay extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showRange: false, showDiff: false }\r\n   }\r\n\r\n   toggleShowDate = (status) => {\r\n      status ? this.setState({ showDate: false }) : this.setState({ showDate: true });\r\n   }\r\n\r\n   toggleShowRange = (status) => {\r\n      status ? this.setState({ showRange: false }) : this.setState({ showRange: true });\r\n   }\r\n\r\n   toggleShowDiff = (status) => {\r\n      status ? this.setState({ showDiff: false }) : this.setState({ showDiff: true });\r\n   }\r\n\r\n   render() {\r\n      //const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader\r\n               showStates={this.state}\r\n               handleToggleShowDate={this.toggleShowDate}\r\n               handleToggleShowRange={this.toggleShowRange}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n            />\r\n            <DisplayBody\r\n               rows={this.props.data}\r\n               showStates={this.state}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   //console.log(props);\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\">\r\n            <th className=\"text-left\" style={{ width: '25%' }}>\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showStates.showDate ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showStates.showRange ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>{props.showStates.showDiff ? <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nclass DisplayBody extends Component {\r\n\r\n   refreshQuote = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, false);\r\n   }\r\n\r\n   refreshChart = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, true);\r\n   }\r\n\r\n   render() {\r\n      const rows = this.props.rows.map((row, index) => {\r\n         // independent of market state\r\n         const dateOptions = { month: 'numeric', day: 'numeric' };\r\n         const timeOptions = { hour12: false };\r\n         const dayLow = row.regularMarketDayLow.fmt;\r\n         const dayHigh = row.regularMarketDayHigh.fmt;\r\n         const regularPrice = row.regularMarketPrice.fmt;\r\n         const colonIndex = row.symbol.indexOf('.');\r\n         const symbolString = colonIndex > -1 ? row.symbol.slice(0, colonIndex) : row.symbol;\r\n         const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\";\r\n         const symColor = colonIndex > -1 ?\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"primary\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"danger\" :\r\n                  (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"dark\" :\r\n                     \"warning\"\r\n                  )\r\n               )\r\n            ) : \"success\";\r\n         const exchange = colonIndex > -1 ?\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"tsx\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"cse\" :\r\n                  (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"tsxv\" :\r\n                     \"neo\"\r\n                  )\r\n               )\r\n            ) : \"us\";\r\n\r\n         // market state dependent\r\n         let marketTime = row.regularMarketTime.raw;\r\n         let changePercent = row.regularMarketChangePercent.fmt;\r\n         let formattedChange = row.regularMarketChange.fmt;\r\n         let change = row.regularMarketChange.raw;\r\n         let price = row.regularMarketPrice.fmt;\r\n         if ((row.marketState === 'POST' || row.marketState === 'POSTPOST' || row.marketState === 'PREPRE') && row.postMarketTime) {\r\n            marketTime = row.postMarketTime.raw;\r\n            changePercent = row.postMarketChangePercent.fmt;\r\n            formattedChange = row.postMarketChange.fmt;\r\n            change = row.postMarketChange.raw;\r\n            price = row.postMarketPrice.fmt;\r\n         } else if (row.marketState === \"PRE\" && row.preMarketTime) {\r\n            marketTime = row.preMarketTime.raw;\r\n            changePercent = row.preMarketChangePercent.fmt;\r\n            formattedChange = row.preMarketChange.fmt;\r\n            change = row.preMarketChange.raw;\r\n            price = row.preMarketPrice.fmt;\r\n         }\r\n\r\n         const dateStr = new Date(marketTime * 1000).toLocaleDateString('en-CA', dateOptions);\r\n         const timeStr = new Date(marketTime * 1000).toLocaleTimeString('en-CA', timeOptions);\r\n         const textColor = change > 0 ? \"text-success\" : (change < 0 ? \"text-danger\" : \"text-dark\");\r\n\r\n         return (\r\n\r\n            <tr key={exchange + \"-\" + symbolString} className=\"text-right\">\r\n               <td className=\"text-left\">\r\n                  <Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => this.refreshChart(exchange, symbolString)} ><span role=\"img\" aria-label=\"Chart\">&#x1F4C8;</span></Button>\r\n                  {' '}<Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => this.refreshQuote(exchange, symbolString)} >{symbolString}</Button></td>\r\n               <td>\r\n                  {this.props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n               </td>\r\n               <td>\r\n                  {this.props.showStates.showRange\r\n                     ? <OverlayTrigger overlay={<Tooltip id={exchange + \"-\" + symbolString}>{dayLow +\"-\"+dayHigh}</Tooltip>}>\r\n                        <ProgressBar key={1} variant={symColor} min={dayLow} now={price} max={dayHigh} label={regularPrice}/>\r\n                     </OverlayTrigger>\r\n                     : <span>{currency}{price}</span>}\r\n               </td>\r\n               <td className={textColor}>\r\n                  {this.props.showStates.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span>}\r\n               </td>\r\n            </tr>\r\n         )\r\n      });\r\n\r\n      return <tbody>{rows}</tbody>;\r\n   }\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: '', date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {            \r\n      this.props.handleInputChange(null, \"Quote for \"+ this.state.symbol.toUpperCase() + ' on ' + this.state.exchange.toUpperCase() + \" exchange requested ...\");\r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);      \r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      const regex = new RegExp('^[a-zA-Z0-9]{1,32}$');;\r\n      const symbol = event.target.value.trim()\r\n      if (regex.test(symbol)) {\r\n         this.setState({ \"symbol\": symbol });\r\n         this.props.handleInputChange(null, null);\r\n      } else {\r\n         this.setState({ \"symbol\": '' });\r\n         this.props.handleInputChange(\"Invalid symbol.\", null);\r\n      }\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange(null, null);\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n         <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n            <Form.Group as={Row}>\r\n               <Col xs=\"4\">\r\n                  <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                     <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                     <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                     <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                     <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                     <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                  </Form.Control>\r\n               </Col>\r\n               <Col xs=\"6\">\r\n                  <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder={\"symbol-\" + timeStr} size=\"sm\" value={this.state.symbol} />\r\n               </Col>\r\n               {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                  : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n               }\r\n            </Form.Group>\r\n         </Form>       \r\n      </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInputEnabler extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { date: new Date() }\r\n   }\r\n\r\n   handleClick = () => {\r\n      this.props.onClick();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n      \r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n        <Container className='mt-3 md-3'>\r\n            <Row>\r\n                <Col className=\"my-auto\">{timeStr}</Col>\r\n                <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n            </Row>               \r\n        </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>Enjoy exploring all available features <span role=\"img\" aria-label=\"Seedling\">🌱</span> <span role=\"img\" aria-label=\"Chart\">📈</span></p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\nimport \"./App.css\";\r\n\r\nimport {\r\n   AreaChart,\r\n   Area,\r\n   XAxis,\r\n   YAxis,\r\n   CartesianGrid,\r\n   Tooltip,\r\n   ReferenceLine,\r\n   ResponsiveContainer,\r\n   Label\r\n} from \"recharts\";\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         \"errorMessage\": null,\r\n         'message': null,\r\n         showSymbolExchangeInput: true,\r\n         showChart: false,\r\n         chart: null,\r\n         latestQuotes: []\r\n      }\r\n   }\r\n\r\n   updateMessage = (errMsg, msg) => {\r\n      this.setState({ \"errorMessage\": errMsg, 'message': msg });\r\n   }\r\n\r\n\r\n   updateQuotes = (quote) => {\r\n      let updatedQuotes = [...this.state.latestQuotes];\r\n      const quoteNums = this.state.latestQuotes.length;\r\n      let foundMatching = false;\r\n      for (let index = 0; index < quoteNums; index++) {\r\n         let row = updatedQuotes[index];\r\n         if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = { ...quote.regularMarketDayHigh };\r\n            row.regularMarketDayLow = { ...quote.regularMarketDayLow };\r\n            row.regularMarketChangePercent = { ...quote.regularMarketChangePercent };\r\n            row.regularMarketChange = { ...quote.regularMarketChange };\r\n            row.regularMarketPrice = { ...quote.regularMarketPrice };\r\n            row.regularMarketTime = { ...quote.regularMarketTime };\r\n            if ((quote.marketState === \"POST\" || quote.marketState === \"POSTPOST\" || quote.marketState === \"PREPRE\") && quote.postMarketTime) {\r\n               row.postMarketPrice = { ...quote.postMarketPrice };\r\n               row.postMarketTime = { ...quote.postMarketTime };\r\n               row.postMarketChangePercent = { ...quote.postMarketChangePercent };\r\n               row.postMarketChange = { ...quote.postMarketChange }\r\n            } else if (quote.marketState === \"PRE\" && quote.preMarketTime) {\r\n               row.preMarketPrice = { ...quote.preMarketPrice };\r\n               row.preMarketTime = { ...quote.preMarketTime };\r\n               row.preMarketChangePercent = { ...quote.preMarketChangePercent };\r\n               row.preMarketChange = { ...quote.preMarketChange }\r\n            }\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!foundMatching) {\r\n         updatedQuotes = [quote, ...updatedQuotes];\r\n      }\r\n\r\n      this.setState({ latestQuotes: updatedQuotes });\r\n   }\r\n\r\n   getQuoteChart = (symbol, exchange, show, showChart) => {\r\n\r\n\r\n      //console.log(\"index.js - symbol: \" + symbol);\r\n      //console.log(\"index.js - exchange: \" + exchange);\r\n      const yahooSymbol = exchange === \"tsx\" ? symbol + \".to\"\r\n         : (exchange === \"cse\" ? symbol + \".cn\"\r\n            : (exchange === \"tsxv\" ? symbol + \".v\"\r\n               : (exchange === \"neo\" ? symbol + \".ne\" : symbol)));\r\n\r\n      if (showChart) {\r\n         this.setState({\r\n            showSymbolExchangeInput: show, showChart: showChart\r\n         });\r\n\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v8/finance/chart/' + yahooSymbol + '?includePrePost=false&interval=2m&useYfid=true&range=1d')\r\n            .then(res => {\r\n               //console.log(res);\r\n               const chartArray = res.data.chart.result;\r\n               //console.log(quotes);\r\n               if (chartArray && chartArray.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const timeStamps = chartArray[0].timestamp;\r\n                  //console.log(message);\r\n                  if (timeStamps && timeStamps.length > 0) {\r\n                     this.setState({\r\n                        chart: { exchange: exchange, symbol: symbol, x: timeStamps, y: chartArray[0].indicators.quote[0].close, previousClose: chartArray[0].meta.previousClose },\r\n                        errorMessage: null\r\n                     });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               } else {\r\n                  if (res.data.chart.error) {\r\n                     const code = res.data.chart.error.code;\r\n                     const description = res.data.chart.error.description;\r\n                     this.setState({ chart: null, \"errorMessage\": code + \": \" + description });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               }\r\n            });\r\n      } else {\r\n         this.setState({ showSymbolExchangeInput: show, showChart: false });\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n            .then(res => {\r\n               //console.log(res);\r\n               const quotes = res.data.quoteResponse.result;\r\n               //console.log(quotes);\r\n               if (quotes && quotes.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const message = quotes[0].longName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                     : (quotes[0].shortName ? quotes[0].shortName + ' on ' + quotes[0].fullExchangeName : null);\r\n                  //console.log(message);\r\n                  if (message) {\r\n                     this.setState({ \"errorMessage\": null, 'message': message, chart: null });\r\n                     this.updateQuotes(quotes[0]);\r\n                  } else {\r\n                     this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                  }\r\n               } else {\r\n                  this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  // The request was made and the server responded with a status code\r\n                  // that falls out of the range of 2xx\r\n                  //console.log(err.response.data);\r\n                  //console.log(err.response.status);\r\n                  //console.log(err.response.headers);\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               }\r\n            });\r\n      }\r\n   }\r\n\r\n   toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n   }\r\n\r\n   handleCloseChart = () => {\r\n      this.setState({ showChart: false, chart: null });\r\n   }\r\n   \r\n   render() {\r\n\r\n      // prepare data in chart\r\n      const quotes = this.state.chart && this.state.chart.y.filter(value => value !== null)\r\n      .map((value, index) => ({\r\n         time: new Date(this.state.chart.x[index] * 1000).toLocaleTimeString(\"en-CA\", {\r\n            hour12: false,\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\"\r\n         }),\r\n         quote: Math.round(value * 100) / 100\r\n      }));\r\n      const previousClose = this.state.chart && this.state.chart.previousClose;\r\n\r\n      // four ticks as in Yahoo! Finance\r\n      const tick1 = this.state.chart && new Date((this.state.chart.x[0] + 1800) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick2 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 2) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick3 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 4) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick4 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 6) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                     <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                     <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>\r\n            <Note />\r\n            {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuoteChart} handleInputChange={this.updateMessage} />\r\n               : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} />}\r\n            {this.state.message && <MessageDisplay msg={this.state.message} />}\r\n            {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n            {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuoteChart} />}\r\n            {this.state.chart &&\r\n               <Modal show={this.state.showChart} onHide={this.handleCloseChart}>\r\n\r\n                  <Modal.Body>\r\n                     <p className=\"text-center\">{this.state.chart.symbol.toUpperCase()} on {this.state.chart.exchange.toUpperCase()} Exchange <br />\r\n                        <small>{new Date(this.state.chart.x[0] * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x[0] * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })} - {new Date(this.state.chart.x.at(-1) * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })}</small></p>\r\n                     <ResponsiveContainer width={'90%'} height={300}>\r\n                        <AreaChart width={500} height={400} data={quotes} className=\"my-3 mx-3\">\r\n                           <CartesianGrid strokeDasharray=\"3 3\" />\r\n                           <XAxis dataKey=\"time\" tickLine={false} tickSize={8} axisLine={false} tick={{ fontSize: '0.8rem' }} ticks={[tick1, tick2, tick3, tick4]} />\r\n                           <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} orientation='right' tickLine={false} tickSize={0} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                           <Tooltip formatter={(value, name, props) => [value, \"\"]} separator={''} contentStyle={{ fontSize: '0.8rem' }} content={({ active, payload, label }) => {\r\n                              if (active && payload && payload.length) {\r\n                                 return (\r\n                                    <div className=\"custom-tooltip\" style={{ backgroundColor: '#ddd', fontSize: '0.8rem', padding: '0 0.5rem' }}>\r\n                                       <p className=\"label\">{`${label} - ${payload[0].value}`}</p>\r\n                                    </div>\r\n                                 );\r\n                              } else { return <></> }\r\n                           }} />\r\n                           <ReferenceLine\r\n                              y={previousClose}\r\n                              stroke=\"black\"\r\n                              strokeDasharray=\"3 3\"\r\n                              alwaysShow = {true}\r\n                           >\r\n                              <Label value={previousClose} position={\"bottom\"} fontSize={'0.8rem'} fontWeight={'bold'} />\r\n                           </ReferenceLine>\r\n\r\n                           <Area type=\"monotone\" dataKey=\"quote\" stroke=\"#8884d8\" fill={Math.round(this.state.chart.y.at(-1) * 100) / 100 > previousClose ? \"green\" : \"red\"} />\r\n                        </AreaChart>\r\n                     </ResponsiveContainer>\r\n                  </Modal.Body>\r\n               </Modal>}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}