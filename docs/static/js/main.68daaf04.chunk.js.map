{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","data","this","props","Table","striped","bordered","hover","responsive","size","rows","Component","DisplayHeader","className","role","aria-label","DisplayBody","map","row","index","dateStr","Date","regularMarketTime","raw","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","changePercent","regularMarketChangePercent","fmt","change","regularMarketChange","textColor","colonIndex","symbol","indexOf","price","regularMarketPrice","volume","regularMarketVolume","symColor","slice","toLowerCase","symbolString","currency","key","GetQuote","getQuote","state","exchange","axios","get","then","res","quotes","quoteResponse","result","length","message","longName","shortName","fullExchangeName","setState","handleSubmit","catch","err","response","includes","status","name","code","handleSymbolUpdate","event","target","value","trim","handleExchangeUpdate","e","errorMessage","disableGet","undefined","displayError","displayMessage","Container","Alert","variant","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","type","autoCorrect","autoCapitalize","Button","onClick","disabled","msg","DisplayMessage","useState","show","setShow","Toast","delay","autohide","onClose","Body","require","config","App","quote","latestQuotes","Navbar","bg","sticky","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","title","token","process","Notes","dismissible","Heading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68daaf04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   render() {\r\n      const { data } = this.props;\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader />\r\n            <DisplayBody rows={data} />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\">\r\n            <th className=\"text-left\"><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span> <span role=\"img\" aria-label=\"Time\">&#x23F2;</span></th>\r\n            <th><span role=\"img\" aria-label=\"Symbol\">&#x1F4C8;</span></th>\r\n            <th><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span> <span role=\"img\" aria-label=\"Volume\">&#x1F4CA;</span></th>\r\n            <th>&#x00B1; %</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateOptions = { month: 'numeric', day: 'numeric' };\r\n      const dateStr = new Date(row.regularMarketTime.raw*1000).toLocaleDateString('en-CA', dateOptions);\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = new Date(row.regularMarketTime.raw*1000).toLocaleTimeString('en-CA', timeOptions);\r\n      const changePercent = row.regularMarketChangePercent.fmt;\r\n      const change = row.regularMarketChange.fmt;\r\n      const textColor = row.regularMarketChange.raw === 0 ? \"text-dark\"\r\n         : (row.regularMarketChange.raw > 0 ? \"text-success\" : \"text-danger\");\r\n      const colonIndex = row.symbol.indexOf('.');\r\n      const price = row.regularMarketPrice.fmt;\r\n      const volume = row.regularMarketVolume.fmt;\r\n\r\n      const symColor = colonIndex > -1 ? \r\n         (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"text-primary\" \r\n         : (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"text-danger\" : \"text-dark\"))\r\n         : \"text-success\";\r\n\r\n      const symbolString = colonIndex > -1 ? row.symbol.slice(0,colonIndex) : row.symbol;\r\n      const currency = row.currency;\r\n      return (\r\n\r\n         <tr key={index} className=\"text-right\">\r\n            <td className=\"text-left\">{dateStr} <span className=\"font-weight-bold\">{timeStr}</span></td>\r\n            <td className={symColor}>{symbolString}</td>\r\n            <td>{currency}<span className=\"font-weight-bold\">{price}</span> {volume}</td>\r\n            <td className={textColor}><span className=\"font-weight-bold\">{change}</span> {changePercent}</td>\r\n         </tr >\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;\r\n","import React, { useState, Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: null, symbol: null, errorMessage: null, message: null}\r\n   }\r\n\r\n   getQuote = () => {\r\n      const symbol = this.state.exchange === \"TSX\" ? this.state.symbol.toLowerCase() + \".to\"\r\n         : (this.state.exchange === \"CSE\" ? this.state.symbol.toLowerCase() + \".cn\" \r\n         : (this.state.exchange === \"TSXV\"? this.state.symbol.toLowerCase() + \".v\" : this.state.symbol));\r\n      axios.get('https://enjoyit-cors-anywhere.herokuapp.com/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + symbol)\r\n         .then(res => {\r\n            //console.log(res);\r\n            const quotes = res.data.quoteResponse.result;\r\n            //console.log(quote);\r\n            if (quotes && quotes.length >  0) {\r\n               //console.log(\"Got last price ... \");\r\n               const message = quotes[0].longName ?  quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                  : (quotes[0].shortName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName : null);\r\n               if (message) {\r\n                  this.setState({ ...this.state, \"errorMessage\": null, 'message': message });\r\n                  this.props.handleSubmit(quotes[0]);\r\n               } else {\r\n                  this.setState({ ...this.state, \"errorMessage\": \"Sorry, no data found.\" });\r\n               }               \r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Sorry, no data found.\" });\r\n            }\r\n         })\r\n         .catch(err => {\r\n            //console.log(err);\r\n            let message;\r\n            if (err.response && err.response.data) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               //console.log(err.response.data);\r\n               //console.log(err.response.status);\r\n               //console.log(err.response.headers);\r\n               if (typeof err.response.data === 'string') {\r\n                  message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n               } else {\r\n                  message = err.response.data.name + \": \" + err.response.data.message;\r\n               } \r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               message = err.name + ' (' + err.code + '): ' + err.message;\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            }\r\n         });\r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value.trim(), \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ ...this.state, \"exchange\": e.target.value, \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayError = this.state.errorMessage === null ? false : true;\r\n      const displayMessage = this.state.message === null ? false : true;\r\n      return (\r\n         <Container>\r\n            <Alert variant='info'>\r\n            <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} >\r\n                  <Col xs=\"4\">\r\n                     <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\">\r\n                        <option value=\"US\">US</option>\r\n                        <option value=\"TSX\">TSX</option>\r\n                        <option value=\"TSXV\">TSV</option>\r\n                        <option value=\"CSE\">CSE</option>\r\n                     </Form.Control>\r\n                  </Col>\r\n                  <Col xs=\"5\">\r\n                     <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder=\"Symbol\" />\r\n                  </Col>\r\n                  {disableGet ? <Col xs=\"2\"><Button variant=\"info\" onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                     : <Col xs=\"2\"><Button onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                  }\r\n               </Form.Group>\r\n            </Form>\r\n            </Alert>\r\n            {displayMessage ? <div className='pb-3'><DisplayMessage msg={this.state.message}/></div>: null}\r\n            {displayError ? <Alert variant='warning'>{this.state.errorMessage}</Alert> : null}\r\n         </Container>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayMessage = props => {\r\n   const msg = props.msg;\r\n   const [show, setShow] = useState(true);\r\n\r\n   \r\n   return (\r\n      <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n   )\r\n   \r\n};\r\n\r\nexport default GetQuote;\r\n","import React, { useState, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Display from './display';\r\nimport GetQuote from './input';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nrequire('dotenv').config();\r\n\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { latestQuotes: [] }\r\n   }\r\n\r\n   getQuote = quote => {\r\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes] });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand href=\"https://enjoyit.ca\">\r\n                  enjoyit.ca &#x00A9; 2022\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n               <Navbar.Collapse id=\"basic-navbar-nav\">\r\n               <Nav className=\"mr-auto\">\r\n               <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n               <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n               </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>            \r\n            <Notes />\r\n            <GetQuote handleSubmit={this.getQuote} token={process.env.REACT_APP_TOKEN} />\r\n            {this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nconst Notes = () => {\r\n   const [show, setShow] = useState(true);\r\n\r\n   if (show) {\r\n      return (\r\n         <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n            <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n            <p>For non-common stocks, Yahoo! Finance convention is used.</p>            \r\n         </Alert>         \r\n      )\r\n   }\r\n   return <></>;\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}