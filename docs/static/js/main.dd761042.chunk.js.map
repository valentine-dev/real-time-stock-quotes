{"version":3,"sources":["component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/App/App.jsx","index.js"],"names":["QuoteDisplay","props","toggleShowDate","status","setState","showDate","toggleShowRange","showRange","toggleShowDiff","showDiff","state","Table","striped","bordered","hover","responsive","size","showStates","this","handleToggleShowDate","handleToggleShowRange","handleToggleShowDiff","rows","data","handleSubmit","Component","DisplayHeader","className","style","width","Button","boxShadow","border","background","padding","onClick","role","aria-label","color","DisplayBody","refreshQuote","exchange","symbol","toLowerCase","refreshChart","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","regularMarketPrice","marketState","postMarketTime","preMarketTime","preMarketChangePercent","preMarketChange","preMarketPrice","postMarketChangePercent","postMarketChange","postMarketPrice","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","key","ProgressBar","variant","min","now","max","MessageDisplay","msg","useState","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleInputChange","handleSymbolUpdate","event","regex","RegExp","target","value","trim","test","handleExchangeUpdate","e","date","timerID","setInterval","tick","clearInterval","disableGet","undefined","length","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","title","disabled","SymbolExchangeInputEnabler","handleClick","Notes","Alert","dismissible","Heading","require","config","App","updateMessage","errMsg","updateQuotes","quote","updatedQuotes","latestQuotes","quoteNums","foundMatching","getQuoteChart","showChart","yahooSymbol","showSymbolExchangeInput","axios","get","process","then","res","chartArray","chart","result","timeStamps","timestamp","x","y","indicators","close","previousClose","meta","errorMessage","error","code","description","catch","err","message","response","includes","name","quotes","quoteResponse","longName","fullExchangeName","shortName","toggleSymbolExchangeInputShow","handleCloseChart","filter","time","hour","minute","Math","round","tick1","tick2","tick3","tick4","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","id","Nav","Link","Note","Modal","onHide","at","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickLine","tickSize","axisLine","fontSize","ticks","YAxis","domain","orientation","Tooltip","formatter","separator","contentStyle","content","active","payload","label","backgroundColor","ReferenceLine","stroke","isOverflow","Label","position","fontWeight","Area","fill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd761042.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './QuoteDisplay.css';\r\nimport { Button, ProgressBar, } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass QuoteDisplay extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showRange: false, showDiff: false}\r\n   }\r\n\r\n   toggleShowDate = (status) => {      \r\n      status ? this.setState({showDate: false}) : this.setState({showDate: true});\r\n   } \r\n\r\n   toggleShowRange = (status) => {      \r\n      status ? this.setState({showRange: false}) : this.setState({showRange: true});\r\n   }\r\n\r\n   toggleShowDiff = (status) => {      \r\n      status ? this.setState({showDiff: false}) : this.setState({showDiff: true});\r\n   }\r\n\r\n   render() {\r\n      //const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader \r\n               showStates={this.state} \r\n               handleToggleShowDate={this.toggleShowDate} \r\n               handleToggleShowRange={this.toggleShowRange}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n            />\r\n            <DisplayBody \r\n               rows={this.props.data} \r\n               showStates={this.state}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   //console.log(props);\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\"> \r\n            <th className=\"text-left\" style={{width: '25%'}}>\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showDate ? <Button style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showRange ? <Button style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>{props.showStates.showDiff ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nclass DisplayBody extends Component {\r\n\r\n   refreshQuote = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, false);\r\n   }\r\n\r\n   refreshChart = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, true);\r\n   }\r\n      \r\n   render() {\r\n      const rows = this.props.rows.map((row, index) => {\r\n         // independent of market state\r\n         const dateOptions = { month: 'numeric', day: 'numeric' };\r\n         const timeOptions = { hour12: false };    \r\n         const dayLow = row.regularMarketDayLow.fmt;\r\n         const dayHigh = row.regularMarketDayHigh.fmt;\r\n         const colonIndex = row.symbol.indexOf('.');\r\n         const symbolString = colonIndex > -1 ? row.symbol.slice(0,colonIndex) : row.symbol;\r\n         const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\" ;  \r\n         const symColor = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"primary\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"danger\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"dark\" : \r\n                   \"warning\" \r\n                 )\r\n              )           \r\n            ) : \"success\";\r\n         const exchange = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"tsx\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"cse\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"tsxv\" : \r\n                   \"neo\" \r\n                 )\r\n              )           \r\n            ) : \"us\";\r\n\r\n         // market state dependent\r\n         let marketTime = row.regularMarketTime.raw;\r\n         let changePercent = row.regularMarketChangePercent.fmt;\r\n         let formattedChange = row.regularMarketChange.fmt;\r\n         let change = row.regularMarketChange.raw;\r\n         let price = row.regularMarketPrice.fmt;\r\n         if ( (row.marketState === 'POST' || row.marketState === 'POSTPOST' || row.marketState === 'PREPRE') && row.postMarketTime ) {\r\n            marketTime = row.postMarketTime.raw;\r\n            changePercent = row.postMarketChangePercent.fmt;\r\n            formattedChange = row.postMarketChange.fmt;\r\n            change = row.postMarketChange.raw;\r\n            price = row.postMarketPrice.fmt;            \r\n         } else if (row.marketState === \"PRE\" && row.preMarketTime) {\r\n            marketTime = row.preMarketTime.raw;\r\n            changePercent = row.preMarketChangePercent.fmt;\r\n            formattedChange = row.preMarketChange.fmt;\r\n            change = row.preMarketChange.raw;\r\n            price = row.preMarketPrice.fmt;  \r\n         }\r\n\r\n         const dateStr = new Date(marketTime*1000).toLocaleDateString('en-CA', dateOptions);\r\n         const timeStr = new Date(marketTime*1000).toLocaleTimeString('en-CA', timeOptions);\r\n         const textColor = change > 0 ? \"text-success\" : (change < 0 ? \"text-danger\" : \"text-dark\");\r\n         \r\n         return (\r\n   \r\n            <tr key={exchange+\"-\"+symbolString} className=\"text-right\">\r\n               <td className=\"text-left\">\r\n               <Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => this.refreshChart(exchange, symbolString)} ><span role=\"img\" aria-label=\"Chart\">&#x1F4C8;</span></Button>\r\n               {' '}<Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{boxShadow: 'none', border: 'none', background: 'none', padding: 0}} onClick={() => this.refreshQuote(exchange, symbolString)} >{symbolString}</Button></td>\r\n               <td>\r\n               {this.props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n               </td>\r\n               <td>\r\n                  {this.props.showStates.showRange ? <ProgressBar variant={symColor} min={dayLow} now={price} max={dayHigh}/>: <span>{currency}{price}</span> }\r\n               </td>\r\n               <td className={textColor}>\r\n                  {this.props.showStates.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span> }\r\n               </td>\r\n            </tr>\r\n         )\r\n      });\r\n   \r\n      return <tbody>{rows}</tbody>;\r\n   }\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: '', date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {            \r\n      this.props.handleInputChange(null, \"Quote for \"+ this.state.symbol.toUpperCase() + ' on ' + this.state.exchange.toUpperCase() + \" exchange requested ...\");\r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);      \r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      const regex = new RegExp('^[a-zA-Z0-9]{1,32}$');;\r\n      const symbol = event.target.value.trim()\r\n      if (regex.test(symbol)) {\r\n         this.setState({ \"symbol\": symbol });\r\n         this.props.handleInputChange(null, null);\r\n      } else {\r\n         this.setState({ \"symbol\": '' });\r\n         this.props.handleInputChange(\"Invalid symbol.\", null);\r\n      }\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange(null, null);\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n         <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n            <Form.Group as={Row}>\r\n               <Col xs=\"4\">\r\n                  <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                     <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                     <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                     <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                     <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                     <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                  </Form.Control>\r\n               </Col>\r\n               <Col xs=\"6\">\r\n                  <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder={\"symbol-\" + timeStr} size=\"sm\" value={this.state.symbol} />\r\n               </Col>\r\n               {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                  : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n               }\r\n            </Form.Group>\r\n         </Form>       \r\n      </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInputEnabler extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { date: new Date() }\r\n   }\r\n\r\n   handleClick = () => {\r\n      this.props.onClick();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n      \r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n        <Container className='mt-3 md-3'>\r\n            <Row>\r\n                <Col className=\"my-auto\">{timeStr}</Col>\r\n                <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n            </Row>               \r\n        </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>Enjoy exploring all available features <span role=\"img\" aria-label=\"Seedling\">🌱</span> <span role=\"img\" aria-label=\"Chart\">📈</span></p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\n\r\nimport {\r\n   AreaChart,\r\n   Area,\r\n   XAxis,\r\n   YAxis,\r\n   CartesianGrid,\r\n   Tooltip,\r\n   ReferenceLine,\r\n   ResponsiveContainer,\r\n   Label\r\n} from \"recharts\";\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         latestQuotes: [],\r\n         \"errorMessage\": null,\r\n         'message': null,\r\n         showSymbolExchangeInput: true,\r\n         showChart: false,\r\n         chart: null\r\n      }\r\n   }\r\n\r\n   updateMessage = (errMsg, msg) => {\r\n      this.setState({ \"errorMessage\": errMsg, 'message': msg });\r\n   }\r\n\r\n\r\n   updateQuotes = (quote) => {\r\n      let updatedQuotes = [...this.state.latestQuotes];\r\n      const quoteNums = this.state.latestQuotes.length;\r\n      let foundMatching = false;\r\n      for (let index = 0; index < quoteNums; index++) {\r\n         let row = updatedQuotes[index];\r\n         if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = { ...quote.regularMarketDayHigh };\r\n            row.regularMarketDayLow = { ...quote.regularMarketDayLow };\r\n            row.regularMarketChangePercent = { ...quote.regularMarketChangePercent };\r\n            row.regularMarketChange = { ...quote.regularMarketChange };\r\n            row.regularMarketPrice = { ...quote.regularMarketPrice };\r\n            row.regularMarketTime = { ...quote.regularMarketTime };\r\n            if ((quote.marketState === \"POST\" || quote.marketState === \"POSTPOST\" || quote.marketState === \"PREPRE\") && quote.postMarketTime) {\r\n               row.postMarketPrice = { ...quote.postMarketPrice };\r\n               row.postMarketTime = { ...quote.postMarketTime };\r\n               row.postMarketChangePercent = { ...quote.postMarketChangePercent };\r\n               row.postMarketChange = { ...quote.postMarketChange }\r\n            } else if (quote.marketState === \"PRE\" && quote.preMarketTime) {\r\n               row.preMarketPrice = { ...quote.preMarketPrice };\r\n               row.preMarketTime = { ...quote.preMarketTime };\r\n               row.preMarketChangePercent = { ...quote.preMarketChangePercent };\r\n               row.preMarketChange = { ...quote.preMarketChange }\r\n            }\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!foundMatching) {\r\n         updatedQuotes = [quote, ...updatedQuotes];\r\n      }\r\n\r\n      this.setState({ latestQuotes: updatedQuotes });\r\n   }\r\n\r\n   getQuoteChart = (symbol, exchange, show, showChart) => {\r\n\r\n\r\n      //console.log(\"index.js - symbol: \" + symbol);\r\n      //console.log(\"index.js - exchange: \" + exchange);\r\n      const yahooSymbol = exchange === \"tsx\" ? symbol + \".to\"\r\n         : (exchange === \"cse\" ? symbol + \".cn\"\r\n            : (exchange === \"tsxv\" ? symbol + \".v\"\r\n               : (exchange === \"neo\" ? symbol + \".ne\" : symbol)));\r\n\r\n      if (showChart) {\r\n         this.setState({\r\n            showSymbolExchangeInput: show, showChart: showChart\r\n         });\r\n\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v8/finance/chart/' + yahooSymbol + '?includePrePost=false&interval=2m&useYfid=true&range=1d')\r\n            .then(res => {\r\n               //console.log(res);\r\n               const chartArray = res.data.chart.result;\r\n               //console.log(quotes);\r\n               if (chartArray && chartArray.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const timeStamps = chartArray[0].timestamp;\r\n                  //console.log(message);\r\n                  if (timeStamps && timeStamps.length > 0) {\r\n                     this.setState({\r\n                        chart: { exchange: exchange, symbol: symbol, x: timeStamps, y: chartArray[0].indicators.quote[0].close, previousClose: chartArray[0].meta.previousClose },\r\n                        errorMessage: null\r\n                     });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               } else {\r\n                  if (res.data.chart.error) {\r\n                     const code = res.data.chart.error.code;\r\n                     const description = res.data.chart.error.description;\r\n                     this.setState({ chart: null, \"errorMessage\": code + \": \" + description });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               }\r\n            });\r\n      } else {\r\n         this.setState({ showSymbolExchangeInput: show, showChart: false });\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n            .then(res => {\r\n               //console.log(res);\r\n               const quotes = res.data.quoteResponse.result;\r\n               //console.log(quotes);\r\n               if (quotes && quotes.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const message = quotes[0].longName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                     : (quotes[0].shortName ? quotes[0].shortName + ' on ' + quotes[0].fullExchangeName : null);\r\n                  //console.log(message);\r\n                  if (message) {\r\n                     this.setState({ \"errorMessage\": null, 'message': message, chart: null });\r\n                     this.updateQuotes(quotes[0]);\r\n                  } else {\r\n                     this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                  }\r\n               } else {\r\n                  this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  // The request was made and the server responded with a status code\r\n                  // that falls out of the range of 2xx\r\n                  //console.log(err.response.data);\r\n                  //console.log(err.response.status);\r\n                  //console.log(err.response.headers);\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               }\r\n            });\r\n      }\r\n   }\r\n\r\n   toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n   }\r\n\r\n   handleCloseChart = () => {\r\n      this.setState({ showChart: false, chart: null });\r\n   }\r\n   \r\n   render() {\r\n\r\n      // prepare data in chart\r\n      const quotes = this.state.chart && this.state.chart.y.filter(value => value !== null)\r\n      .map((value, index) => ({\r\n         time: new Date(this.state.chart.x[index] * 1000).toLocaleTimeString(\"en-CA\", {\r\n            hour12: false,\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\"\r\n         }),\r\n         quote: Math.round(value * 100) / 100\r\n      }));\r\n      const previousClose = this.state.chart && this.state.chart.previousClose;\r\n\r\n      // four ticks as in Yahoo! Finance\r\n      const tick1 = this.state.chart && new Date((this.state.chart.x[0] + 1800) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick2 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 2) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick3 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 4) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n      const tick4 = this.state.chart && new Date((this.state.chart.x[0] + 1800 + 3600 * 6) * 1000).toLocaleTimeString(\"en-CA\", {hour12: false, hour: \"2-digit\", minute: \"2-digit\"});\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                     <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                     <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>\r\n            <Note />\r\n            {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuoteChart} handleInputChange={this.updateMessage} />\r\n               : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} />}\r\n            {this.state.message && <MessageDisplay msg={this.state.message} />}\r\n            {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n            {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuoteChart} />}\r\n            {this.state.chart &&\r\n               <Modal show={this.state.showChart} onHide={this.handleCloseChart}>\r\n\r\n                  <Modal.Body>\r\n                     <p className=\"text-center\">{this.state.chart.symbol.toUpperCase()} on {this.state.chart.exchange.toUpperCase()} Exchange <br />\r\n                        <small>{new Date(this.state.chart.x[0] * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x[0] * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })} - {new Date(this.state.chart.x.at(-1) * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })}</small></p>\r\n                     <ResponsiveContainer width={'90%'} height={300}>\r\n                        <AreaChart width={500} height={400} data={quotes} className=\"my-3 mx-3\">\r\n                           <CartesianGrid strokeDasharray=\"3 3\" />\r\n                           <XAxis dataKey=\"time\" tickLine={false} tickSize={8} axisLine={false} tick={{ fontSize: '0.8rem' }} ticks={[tick1, tick2, tick3, tick4]} />\r\n                           <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} orientation='right' tickLine={false} tickSize={0} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                           <Tooltip formatter={(value, name, props) => [value, \"\"]} separator={''} contentStyle={{ fontSize: '0.8rem' }} content={({ active, payload, label }) => {\r\n                              if (active && payload && payload.length) {\r\n                                 return (\r\n                                    <div className=\"custom-tooltip\" style={{ backgroundColor: '#ddd', fontSize: '0.8rem', padding: '0 0.5rem' }}>\r\n                                       <p className=\"label\">{`${label} - ${payload[0].value}`}</p>\r\n                                    </div>\r\n                                 );\r\n                              } else { return <></> }\r\n                           }} />\r\n                           <ReferenceLine\r\n                              y={previousClose}\r\n                              stroke=\"black\"\r\n                              strokeDasharray=\"3 3\"\r\n                              isOverflow='extendDomain'\r\n                           >\r\n                              <Label value={previousClose} position={\"bottom\"} fontSize={'0.8rem'} fontWeight={'bold'} />\r\n                           </ReferenceLine>\r\n\r\n                           <Area type=\"monotone\" dataKey=\"quote\" stroke=\"#8884d8\" fill={Math.round(this.state.chart.y.at(-1) * 100) / 100 > previousClose ? \"green\" : \"red\"} />\r\n                        </AreaChart>\r\n                     </ResponsiveContainer>\r\n                  </Modal.Body>\r\n               </Modal>}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}