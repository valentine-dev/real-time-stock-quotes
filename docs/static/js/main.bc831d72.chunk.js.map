{"version":3,"sources":["utils/getYahooSymbol.js","component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/StockChart/StockChart.jsx","component/App/App.jsx","index.js"],"names":["getYahooSymbol","symbol","exchange","toLowerCase","DisplayHeader","props","showDelete","className","style","width","showDeleteConfirm","Button","boxShadow","border","background","padding","onClick","handleDeletionConfirm","role","aria-label","handleDeletionCancel","handleSubmit","handleDeletionShow","showDate","handleToggleShowDate","showRange","handleToggleShowRange","showDiff","color","handleToggleShowDiff","DisplayBody","rows","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","regularPrice","regularMarketPrice","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","marketState","postMarketTime","preMarketTime","preMarketChangePercent","preMarketChange","preMarketPrice","postMarketChangePercent","postMarketChange","postMarketPrice","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","showDeletionRow","deletedSymbolList","includes","key","handleDeletion","refreshChart","refreshQuote","OverlayTrigger","overlay","Tooltip","id","ProgressBar","variant","min","now","max","label","QuoteDisplay","useState","dateShow","setDateShow","rangeShow","setRangeShow","diffShow","setDiffShow","deletionShow","setDeletionShow","setDeletedSymbolList","Table","striped","bordered","hover","responsive","size","length","handleDelete","data","yahooSymbol","MessageDisplay","msg","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleInputChange","state","handleSymbolUpdate","event","regex","RegExp","target","value","trim","test","setState","handleExchangeUpdate","e","handleSymbolInputKeyDown","date","this","timerID","setInterval","tick","clearInterval","disableGet","undefined","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","onKeyDown","title","disabled","Component","SymbolExchangeInputEnabler","setDate","useEffect","timerId","timerString","Notes","Alert","dismissible","Heading","StockChart","getTicks","chart","chartArray","range","push","x","days","currentDateTimestamp","at","ticks","getTooltip","y","hour","minute","weekday","quotes","filter","time","quote","Math","round","chartPreviousClose","tickArray","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickLine","tickSize","axisLine","fontSize","interval","tickFormatter","timestamp","YAxis","domain","orientation","formatter","name","separator","contentStyle","content","active","payload","backgroundColor","ReferenceLine","stroke","alwaysShow","Label","position","fontWeight","Area","fill","require","config","App","updateMessage","errMsg","errorMessage","message","handleTabUpdate","getQuoteChart","oldState","updateQuotes","updatedQuotes","latestQuotes","quoteNums","foundMatching","showChart","showSymbolExchangeInput","axios","get","process","then","res","result","timeStamps","indicators","close","meta","error","code","description","catch","err","response","status","quoteResponse","longName","fullExchangeName","shortName","symbols","o","join","deleteSymbolList","newQuotes","q","toggleSymbolExchangeInputShow","handleCloseChart","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","Nav","Link","Note","Modal","onHide","Tabs","activeKey","onSelect","Tab","eventKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc831d72.chunk.js","sourcesContent":["function getYahooSymbol(symbol, exchange) {\r\n    return exchange.toLowerCase() === \"tsx\" ? symbol + \".to\"\r\n    : (exchange.toLowerCase() === \"cse\" ? symbol + \".cn\"\r\n       : (exchange.toLowerCase() === \"tsxv\" ? symbol + \".v\"\r\n          : (exchange.toLowerCase() === \"neo\" ? symbol + \".ne\" : symbol)));\r\n }\r\n\r\n export default getYahooSymbol;","import React, { useState } from 'react';\r\nimport './QuoteDisplay.css';\r\nimport { Button, ProgressBar, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\nimport getYahooSymbol from '../../utils/getYahooSymbol';\r\n\r\nfunction QuoteDisplay (props) {\r\n\r\n   const [dateShow, setDateShow] = useState(false);\r\n   const [rangeShow, setRangeShow] = useState(false);\r\n   const [diffShow, setDiffShow] = useState(false);\r\n   const [deletionShow, setDeletionShow] = useState(false);\r\n   const [deletedSymbolList, setDeletedSymbolList] = useState([]);\r\n\r\n   function confirmDelete() {\r\n      props.handleDelete(deletedSymbolList);\r\n      setDeletedSymbolList([]);\r\n      setDeletionShow(false);\r\n\r\n   }\r\n\r\n   function cancelDelete() {\r\n      setDeletedSymbolList([]);\r\n      setDeletionShow(false);\r\n   }\r\n\r\n   function deleteSymbolExchange(symbol, exchange) {\r\n      const yahooSymbol = getYahooSymbol(symbol, exchange);\r\n      setDeletedSymbolList([...deletedSymbolList, yahooSymbol.toUpperCase()]);\r\n   }\r\n   \r\n   return (\r\n      <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n         <DisplayHeader\r\n            showDate={dateShow}\r\n            showRange={rangeShow}\r\n            showDiff={diffShow}\r\n            showDelete={deletionShow}\r\n            showDeleteConfirm={deletedSymbolList.length > 0}\r\n            handleDeletionCancel={() => cancelDelete()}\r\n            handleDeletionShow={() => setDeletionShow(true)}\r\n            handleDeletionConfirm={() => confirmDelete()}\r\n            handleToggleShowDate={() => setDateShow(!dateShow)}\r\n            handleToggleShowRange={() => setRangeShow(!rangeShow)}\r\n            handleToggleShowDiff={() => setDiffShow(!diffShow)}\r\n            handleSubmit={props.handleSubmit}\r\n         />\r\n         <DisplayBody\r\n            rows={props.data}\r\n            showDate={dateShow}\r\n            showRange={rangeShow}\r\n            showDiff={diffShow}\r\n            showDelete={deletionShow}\r\n            deletedSymbolList={deletedSymbolList}\r\n            handleSubmit={props.handleSubmit}\r\n            handleDeletion={deleteSymbolExchange}\r\n         />\r\n      </Table>\r\n   );\r\n}\r\n\r\nfunction DisplayHeader(props) {\r\n   \r\n   return (\r\n      <thead>\r\n      { props.showDelete ? \r\n         <tr className=\"text-left\">\r\n            <th style={{ width: '100%' }}> \r\n               {props.showDeleteConfirm &&\r\n                  <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleDeletionConfirm}><span role=\"img\" aria-label=\"Confirm\">&#x2705;</span></Button>\r\n               }\r\n               {' '}\r\n               <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleDeletionCancel}><span role=\"img\" aria-label=\"Cancel\">&#x274E;</span></Button>\r\n            </th>\r\n         </tr>\r\n      :\r\n         <tr className=\"text-right\">\r\n            <th className=\"text-left\" style={{ width: '25%' }}>\r\n               <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleSubmit(null, null, false)}><span role=\"img\" aria-label=\"Refresh\">&#x1F504;</span></Button>\r\n               {' '}\r\n               <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleDeletionShow}><span role=\"img\" aria-label=\"Delete\">&#x26d4;</span></Button>\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showDate ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleToggleShowDate}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleToggleShowDate}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showRange ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleToggleShowRange}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={props.handleToggleShowRange}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>{props.showDiff ? <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={props.handleToggleShowDiff}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={props.handleToggleShowDiff}><span>%</span></Button>}</th>\r\n         </tr>\r\n      }\r\n      </thead>\r\n   )\r\n}\r\n\r\nfunction DisplayBody (props) {\r\n\r\n   const refreshQuote = (exchange, symbol) => {\r\n      props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, false);\r\n   }\r\n\r\n   const refreshChart = (exchange, symbol) => {\r\n      props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, true);\r\n   }\r\n\r\n\r\n   const rows = props.rows.map((row, index) => {\r\n      // independent of market state\r\n      const dateOptions = { month: 'numeric', day: 'numeric' };\r\n      const timeOptions = { hour12: false };\r\n      const dayLow = row.regularMarketDayLow.fmt;\r\n      const dayHigh = row.regularMarketDayHigh.fmt;\r\n      const regularPrice = row.regularMarketPrice.fmt;\r\n      const colonIndex = row.symbol.indexOf('.');\r\n      const symbolString = colonIndex > -1 ? row.symbol.slice(0, colonIndex) : row.symbol;\r\n      const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\";\r\n      const symColor = colonIndex > -1 ?\r\n         (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"primary\" :\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"danger\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"dark\" :\r\n                  \"warning\"\r\n               )\r\n            )\r\n         ) : \"success\";\r\n      const exchange = colonIndex > -1 ?\r\n         (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"tsx\" :\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"cse\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"tsxv\" :\r\n                  \"neo\"\r\n               )\r\n            )\r\n         ) : \"us\";\r\n\r\n      // market state dependent\r\n      let marketTime = row.regularMarketTime.raw;\r\n      let changePercent = row.regularMarketChangePercent.fmt;\r\n      let formattedChange = row.regularMarketChange.fmt;\r\n      let change = row.regularMarketChange.raw;\r\n      let price = row.regularMarketPrice.fmt;\r\n      if ((row.marketState === 'POST' || row.marketState === 'POSTPOST' || row.marketState === 'PREPRE') && row.postMarketTime) {\r\n         marketTime = row.postMarketTime.raw;\r\n         changePercent = row.postMarketChangePercent.fmt;\r\n         formattedChange = row.postMarketChange.fmt;\r\n         change = row.postMarketChange.raw;\r\n         price = row.postMarketPrice.fmt;\r\n      } else if (row.marketState === \"PRE\" && row.preMarketTime) {\r\n         marketTime = row.preMarketTime.raw;\r\n         changePercent = row.preMarketChangePercent.fmt;\r\n         formattedChange = row.preMarketChange.fmt;\r\n         change = row.preMarketChange.raw;\r\n         price = row.preMarketPrice.fmt;\r\n      }\r\n\r\n      const dateStr = new Date(marketTime * 1000).toLocaleDateString('en-CA', dateOptions);\r\n      const timeStr = new Date(marketTime * 1000).toLocaleTimeString('en-CA', timeOptions);\r\n      const textColor = change > 0 ? \"text-success\" : (change < 0 ? \"text-danger\" : \"text-dark\");\r\n\r\n      const showDeletionRow = !props.deletedSymbolList.includes(getYahooSymbol(symbolString, exchange).toUpperCase());\r\n\r\n      return (\r\n         props.showDelete ?  showDeletionRow &&\r\n         <tr key={exchange + \"-\" + symbolString} className=\"text-center\">\r\n            <td className=\"text-left\">\r\n            <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleDeletion(symbolString, exchange)}><span role=\"img\" aria-label=\"Delete\">&#x26d4;</span></Button>\r\n            {' ' + symbolString.toUpperCase() + ' on ' + exchange.toUpperCase() + ' Exchange'}            \r\n            </td>\r\n         </tr>\r\n         :\r\n         <tr key={exchange + \"-\" + symbolString} className=\"text-right\">\r\n            <td className=\"text-left\">\r\n               <Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => refreshChart(exchange, symbolString)} ><span role=\"img\" aria-label=\"Chart\">&#x1F4C8;</span></Button>\r\n               {' '}\r\n               <Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => refreshQuote(exchange, symbolString)} >{symbolString}</Button></td>\r\n            <td>\r\n               {props.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n            </td>\r\n            <td>\r\n               {props.showRange\r\n                  ? <OverlayTrigger overlay={<Tooltip id={exchange + \"-\" + symbolString}>{dayLow +\"-\"+dayHigh}</Tooltip>}>\r\n                     <ProgressBar key={1} variant={symColor} min={dayLow} now={regularPrice} max={dayHigh} label={regularPrice}/>\r\n                  </OverlayTrigger>\r\n                  : <span>{currency}{price}</span>}\r\n            </td>\r\n            <td className={textColor}>\r\n               {props.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span>}\r\n            </td>\r\n         </tr>      \r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>;\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: '', date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {\r\n      this.props.handleInputChange(null, \"Quote for \" + this.state.symbol.toUpperCase() + ' on ' + this.state.exchange.toUpperCase() + \" exchange requested ...\");\r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);\r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      const regex = new RegExp('^[a-zA-Z0-9]{1,32}$');;\r\n      const symbol = event.target.value.trim()\r\n      if (regex.test(symbol)) {\r\n         this.setState({ \"symbol\": symbol });\r\n         this.props.handleInputChange(null, null);\r\n      } else {\r\n         this.setState({ \"symbol\": '' });\r\n         this.props.handleInputChange(\"Invalid symbol.\", null);\r\n      }\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange(null, null);\r\n   }\r\n\r\n   handleSymbolInputKeyDown = (e) => {\r\n      if (e.key === \"Enter\") {\r\n         this.getQuote();\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.timerID = setInterval(\r\n         () => this.tick(),\r\n         1000\r\n      );\r\n   }\r\n\r\n   tick() {\r\n      this.setState({\r\n         date: new Date()\r\n      });\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      clearInterval(this.timerID);\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n            <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row}>\r\n                  <Col xs=\"4\">\r\n                     <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                        <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                        <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                        <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                        <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                        <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                     </Form.Control>\r\n                  </Col>\r\n                  <Col xs=\"6\">\r\n                     <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" placeholder={\"symbol-\" + timeStr} size=\"sm\" value={this.state.symbol}\r\n                        onChange={this.handleSymbolUpdate}\r\n                        onKeyDown={this.handleSymbolInputKeyDown} />\r\n                  </Col>\r\n                  {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{ border: 'none', background: 'none' }} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                     : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{ border: 'none', background: 'none' }} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                  }\r\n               </Form.Group>\r\n            </Form>\r\n         </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction SymbolExchangeInputEnabler (props) {\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const handleClick = () => {\r\n      props.onClick();\r\n  }\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      setDate(new Date());\r\n    }\r\n    const timerId = setInterval(tick, 1000);\r\n    return () => clearInterval(timerId);\r\n  },[]);   \r\n\r\n  const timerString = date.toLocaleTimeString('en-CA', { hour12: false });\r\n\r\n  return (\r\n    <Container className='mt-3 md-3'>\r\n        <Row>\r\n            <Col className=\"my-auto\">{timerString}</Col>\r\n            <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n        </Row>               \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>Enjoy exploring all available features <span role=\"img\" aria-label=\"Seedling\">🌱</span> <span role=\"img\" aria-label=\"Chart\">📈</span></p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\nimport {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ReferenceLine,\r\n    ResponsiveContainer,\r\n    Label\r\n} from \"recharts\";\r\n\r\nclass StockChart extends Component {\r\n\r\n\r\n    getTicks = (chart) => {\r\n        let chartArray = [];\r\n        if (chart.range === '1d') {\r\n            chartArray.push(chart.x[0] + 1800);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 2);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 4);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 6);\r\n        } else if (chart.range === '5d') {\r\n            chartArray.push(chart.x[0]);\r\n            let days = 1;\r\n            let currentDateTimestamp = chart.x[0];\r\n            while (days < 5) {            \r\n                currentDateTimestamp = currentDateTimestamp + 3600 * 24;    \r\n                if (chart.x.includes( currentDateTimestamp )) {\r\n                    chartArray.push(currentDateTimestamp);\r\n                    days ++;                    \r\n                }\r\n                if (currentDateTimestamp > chart.x.at(-1)) break;\r\n            }\r\n        } else {\r\n            chartArray.push(chart.x[0]);\r\n            let ticks = 1;\r\n            let currentDateTimestamp = chart.x[0];\r\n            while (ticks < 4) {            \r\n                currentDateTimestamp = currentDateTimestamp + 3600 * 24 *10;    \r\n                if (chart.x.includes( currentDateTimestamp )) {\r\n                    chartArray.push(currentDateTimestamp);\r\n                    ticks ++;                    \r\n                }\r\n                if (currentDateTimestamp > chart.x.at(-1)) break;\r\n            }        \r\n        }\r\n        return chartArray;\r\n    }\r\n\r\n    getTooltip = (x, y) => {\r\n        if (this.props.chart.range === '1d') {\r\n            return new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        } else if (this.props.chart.range === '5d') {\r\n            return new Date(x*1000).toLocaleDateString('en-CA', {weekday: 'short', month: 'short', day: 'numeric'}) + \", \" + new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        } else {\r\n            return new Date(x*1000).toLocaleDateString('en-CA', {month: 'short', day: 'numeric'}) + \", \" + new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // prepare data in chart\r\n        const quotes = this.props.chart.y.filter(value => value !== null)\r\n            .map((value, index) => ({\r\n                time: this.props.chart.x[index],\r\n                quote: Math.round(value * 100) / 100\r\n            }));\r\n\r\n        const chartPreviousClose = this.props.chart.chartPreviousClose;\r\n        \r\n        const tickArray = this.getTicks(this.props.chart);\r\n\r\n        const showTick = timestamp => {\r\n            if (this.props.chart.range === '1d') {\r\n                return new Date(timestamp*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" });\r\n            } else if (this.props.chart.range === '5d') {\r\n                return new Date(timestamp*1000).toLocaleDateString('en-CA', {weekday: 'short'});\r\n            } else {\r\n                return new Date(timestamp*1000).toLocaleDateString('en-CA', {month: 'short', day: 'numeric'});\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ResponsiveContainer width={'100%'} height={300}>\r\n                <AreaChart width={500} height={400} data={quotes} className=\"my-3\">\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" tickLine={false} tickSize={8} axisLine={false} tick={{ fontSize: '0.8rem' }} ticks={tickArray} interval=\"preserveStartEnd\"\r\n                        tickFormatter= {showTick} type='category' />\r\n                    <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} orientation='right' tickLine={false} tickSize={0} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                    <Tooltip formatter={(value, name, props) => [value, \"\"]} separator={''} contentStyle={{ fontSize: '0.8rem' }} content={({ active, payload, label }) => {\r\n                        if (active && payload && payload.length) {\r\n                            return (\r\n                                <div className=\"custom-tooltip\" style={{ backgroundColor: '#ddd', fontSize: '0.8rem', padding: '0 0.5rem' }}>\r\n                                    {/*<p className=\"label\">{`${label} - ${payload[0].value}`}</p>*/}\r\n                                    <p className=\"label\">{this.getTooltip(label, payload[0].value)}</p>\r\n                                </div>\r\n                            );\r\n                        } else { return <></> }\r\n                    }} />\r\n                    <ReferenceLine\r\n                        y={chartPreviousClose}\r\n                        stroke=\"black\"\r\n                        strokeDasharray=\"3 3\"\r\n                        alwaysShow={true}\r\n                    >\r\n                        <Label value={chartPreviousClose} position={\"bottom\"} fontSize={'0.8rem'} fontWeight={'bold'} />\r\n                    </ReferenceLine>\r\n\r\n                    <Area type=\"monotone\" dataKey=\"quote\" stroke=\"#8884d8\" fill={Math.round(this.props.chart.y.at(-1) * 100) / 100 > chartPreviousClose ? \"green\" : \"red\"} />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StockChart;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\nimport StockChart from \"../StockChart/StockChart\";\r\nimport \"./App.css\";\r\nimport getYahooSymbol from '../../utils/getYahooSymbol';\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         errorMessage: null,\r\n         message: null,\r\n         showSymbolExchangeInput: true,\r\n         showChart: false,\r\n         chart: null,\r\n         latestQuotes: []\r\n      }\r\n   }\r\n\r\n   updateMessage = (errMsg, msg) => {\r\n      this.setState({ errorMessage: errMsg, message: msg });\r\n   }\r\n\r\n\r\n   handleTabUpdate = (key) => {\r\n      this.getQuoteChart(this.state.chart.symbol, this.state.chart.exchange, false, true, key);\r\n      this.setState( oldState => ({ chart: { ...oldState.chart, range: key}}));\r\n   }\r\n\r\n   updateQuotes = (quote) => {\r\n      let updatedQuotes = [...this.state.latestQuotes];\r\n      const quoteNums = this.state.latestQuotes.length;\r\n      let foundMatching = false;\r\n      for (let index = 0; index < quoteNums; index++) {\r\n         let row = updatedQuotes[index];\r\n         if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = { ...quote.regularMarketDayHigh };\r\n            row.regularMarketDayLow = { ...quote.regularMarketDayLow };\r\n            row.regularMarketChangePercent = { ...quote.regularMarketChangePercent };\r\n            row.regularMarketChange = { ...quote.regularMarketChange };\r\n            row.regularMarketPrice = { ...quote.regularMarketPrice };\r\n            row.regularMarketTime = { ...quote.regularMarketTime };\r\n            if ((quote.marketState === \"POST\" || quote.marketState === \"POSTPOST\" || quote.marketState === \"PREPRE\") && quote.postMarketTime) {\r\n               row.postMarketPrice = { ...quote.postMarketPrice };\r\n               row.postMarketTime = { ...quote.postMarketTime };\r\n               row.postMarketChangePercent = { ...quote.postMarketChangePercent };\r\n               row.postMarketChange = { ...quote.postMarketChange }\r\n            } else if (quote.marketState === \"PRE\" && quote.preMarketTime) {\r\n               row.preMarketPrice = { ...quote.preMarketPrice };\r\n               row.preMarketTime = { ...quote.preMarketTime };\r\n               row.preMarketChangePercent = { ...quote.preMarketChangePercent };\r\n               row.preMarketChange = { ...quote.preMarketChange }\r\n            }\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!foundMatching) {\r\n         updatedQuotes = [quote, ...updatedQuotes];\r\n      }\r\n\r\n      this.setState({ latestQuotes: updatedQuotes });\r\n   }\r\n\r\n   getQuoteChart = (symbol, exchange, show, showChart = false, range = '1d') => {\r\n      const yahooSymbol = getYahooSymbol(symbol, exchange);      \r\n      const interval = range === \"1d\" ? \"2m\" : (range === \"5d\" ? \"15m\" : \"30m\");\r\n\r\n      if (showChart) {\r\n         this.setState({\r\n            showSymbolExchangeInput: show, showChart: showChart\r\n         });\r\n\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v8/finance/chart/' + yahooSymbol \r\n                                                   + '?includePrePost=false&interval=' + interval + '&useYfid=true&range=' + range)\r\n            .then(res => {\r\n               //console.log(res);\r\n               const chartArray = res.data.chart.result;\r\n               //console.log(quotes);\r\n               if (chartArray && chartArray.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const timeStamps = chartArray[0].timestamp;\r\n                  //console.log(message);\r\n                  if (timeStamps && timeStamps.length > 0) {\r\n                     this.setState({\r\n                        chart: { range: range, exchange: exchange, symbol: symbol, x: timeStamps, y: chartArray[0].indicators.quote[0].close, chartPreviousClose: chartArray[0].meta.chartPreviousClose },\r\n                        errorMessage: null\r\n                     });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               } else {\r\n                  if (res.data.chart.error) {\r\n                     const code = res.data.chart.error.code;\r\n                     const description = res.data.chart.error.description;\r\n                     this.setState({ chart: null, \"errorMessage\": code + \": \" + description });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               }\r\n            });\r\n      } else {\r\n         this.setState({ showSymbolExchangeInput: show, showChart: false });\r\n         if (symbol) {\r\n            axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n               .then(res => {\r\n                  //console.log(res);\r\n                  const quotes = res.data.quoteResponse.result;\r\n                  //console.log(quotes);\r\n                  if (quotes && quotes.length > 0) {\r\n                     //console.log(\"Got last price ... \");\r\n                     const message = quotes[0].longName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                        : (quotes[0].shortName ? quotes[0].shortName + ' on ' + quotes[0].fullExchangeName : null);\r\n                     //console.log(message);\r\n                     if (message) {\r\n                        this.setState({ errorMessage: null, message: message, chart: null });\r\n                        this.updateQuotes(quotes[0]);\r\n                     } else {\r\n                        this.setState({ errorMessage: \"Sorry, no data found.\", message: null, chart: null });\r\n                     }\r\n                  } else {\r\n                     this.setState({ errorMessage: \"Sorry, no data found.\", message: null, chart: null });\r\n                  }\r\n               })\r\n               .catch(err => {\r\n                  //console.log(err);\r\n                  let message;\r\n                  if (err.response && err.response.data) {\r\n                     // The request was made and the server responded with a status code\r\n                     // that falls out of the range of 2xx\r\n                     //console.log(err.response.data);\r\n                     //console.log(err.response.status);\r\n                     //console.log(err.response.headers);\r\n                     if (typeof err.response.data === 'string') {\r\n                        message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                     } else {\r\n                        message = err.response.data.name + \": \" + err.response.data.message;\r\n                     }\r\n                     this.setState({ errorMessage: message, message: null, chart: null });\r\n                  } else {\r\n                     message = err.name + ' (' + err.code + '): ' + err.message;\r\n                     this.setState({ errorMessage: message, message: null, chart: null });\r\n                  }\r\n               });\r\n         } else if (this.state.latestQuotes && this.state.latestQuotes.length > 0) {\r\n            // refresh to get quotes of all current symbols\r\n            const symbols = this.state.latestQuotes.map(o => o.symbol).join();\r\n            axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + symbols)\r\n               .then(res => {\r\n                  //console.log(res);\r\n                  const quotes = res.data.quoteResponse.result;\r\n                  //console.log(quotes);\r\n                  if (quotes && quotes.length > 0) {\r\n                     //console.log(\"Got last price ... \");\r\n                     //console.log(message);\r\n                     this.setState({ latestQuotes: quotes, errorMessage: null, message: \"All \" + quotes.length + \" quotes updated.\", chart: null });\r\n                  } else {\r\n                     this.setState({ errorMessage: \"Sorry, no data found.\", message: null, chart: null });\r\n                  }\r\n               })\r\n               .catch(err => {\r\n                  //console.log(err);\r\n                  let message;\r\n                  if (err.response && err.response.data) {\r\n                     // The request was made and the server responded with a status code\r\n                     // that falls out of the range of 2xx\r\n                     //console.log(err.response.data);\r\n                     //console.log(err.response.status);\r\n                     //console.log(err.response.headers);\r\n                     if (typeof err.response.data === 'string') {\r\n                        message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                     } else {\r\n                        message = err.response.data.name + \": \" + err.response.data.message;\r\n                     }\r\n                     this.setState({ errorMessage: message, chart: null });\r\n                  } else {\r\n                     message = err.name + ' (' + err.code + '): ' + err.message;\r\n                     this.setState({ errorMessage: message, chart: null });\r\n                  }\r\n               });\r\n         }\r\n      }\r\n   }\r\n\r\n   deleteSymbolList = (deletedSymbolList) => {\r\n      const newQuotes = this.state.latestQuotes.filter( q => !deletedSymbolList.includes(q.symbol.toUpperCase()));\r\n      this.setState({ latestQuotes: newQuotes });\r\n   }\r\n\r\n   toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n   }\r\n\r\n   handleCloseChart = () => {\r\n      this.setState({ showChart: false, chart: null, message: null, errorMessage: null });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                     <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                     <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>\r\n            <Note />\r\n            {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuoteChart} handleInputChange={this.updateMessage} />\r\n               : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} />}\r\n            {this.state.message && <MessageDisplay msg={this.state.message} />}\r\n            {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n            {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuoteChart} handleDelete={this.deleteSymbolList} />}\r\n            {this.state.chart &&\r\n               <Modal show={this.state.showChart} onHide={this.handleCloseChart}>\r\n                  <Modal.Body>\r\n                     <p className=\"text-center\">{this.state.chart.symbol.toUpperCase()} on {this.state.chart.exchange.toUpperCase()} Exchange <br />\r\n                        <small>{new Date(this.state.chart.x[0] * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x[0] * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })} - {new Date(this.state.chart.x.at(-1) * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x.at(-1) * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })}</small>\r\n                     </p>\r\n                     <Tabs id=\"chart-tab\" activeKey={this.state.chart.range} onSelect={(key) => this.handleTabUpdate(key)} >\r\n                        <Tab eventKey=\"1d\" title=\"1D\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"5d\" title=\"5D\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"1mo\" title=\"1M\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                     </Tabs>\r\n                  </Modal.Body>\r\n               </Modal>}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}