{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","data","this","props","Table","striped","bordered","hover","responsive","size","rows","Component","DisplayHeader","class","DisplayBody","map","row","index","dateStr","Date","pricedata","lasttradedatetime","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","changePercent","changepercent","toFixed","textColor","change","colonIndex","symbolstring","indexOf","symColor","slice","toLowerCase","symbolString","currency","key","exchange","last","sharevolume","GetQuote","getQuote","symbol","state","startsWith","axios","get","token","then","res","quote","message","equityinfo","longname","exLgName","setState","handleSubmit","name","catch","err","response","includes","status","handleInputChange","event","target","value","trim","errorMessage","disableGet","undefined","length","displayError","displayMessage","Container","Form","autoComplete","onSubmit","e","preventDefault","Group","as","Row","Col","xs","Control","type","autocorrect","autocapitalize","onChange","placeholder","Button","onClick","Alert","variant","require","config","App","latestQuotes","Navbar","bg","sticky","expand","Brand","href","Heading","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a446bf4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   render() {\r\n      const { data } = this.props;\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader />\r\n            <DisplayBody rows={data} />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr class=\"text-right\">\r\n            <th class=\"text-left\">Time</th>\r\n            <th>Symbol (Exchange)</th>\r\n            <th>$ (Volume)</th>\r\n            <th>Change (%)</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateOptions = { month: 'numeric', day: 'numeric' };\r\n      const dateStr = new Date(row.pricedata.lasttradedatetime).toLocaleDateString('en-CA', dateOptions);\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = new Date(row.pricedata.lasttradedatetime).toLocaleTimeString('en-CA', timeOptions);\r\n      const changePercent = row.pricedata.changepercent.toFixed(2) + \"%\";\r\n      const textColor = row.pricedata.change === 0 ? \"text-dark\"\r\n         : (row.pricedata.change > 0 ? \"text-success\" : \"text-danger\");\r\n      const colonIndex = row.symbolstring.indexOf(':');\r\n\r\n      const symColor = colonIndex > -1 ? \r\n         (row.symbolstring.slice(colonIndex+1).toLowerCase() === 'us' ? \"text-success\" : \"text-secondary\")\r\n         : \"text-primary\";\r\n\r\n      const symbolString = colonIndex > -1 ? row.symbolstring.slice(0,colonIndex) : row.symbolstring;\r\n      const currency = symColor === \"text-success\" ? \"USD\" : \"CAD\";\r\n      return (\r\n\r\n         <tr key={index} class=\"text-right\">\r\n            <td class=\"text-left\">{dateStr} {timeStr}</td>\r\n            <td class={symColor}>{symbolString} ({row.key.exchange})</td>\r\n            <td>{currency}<span class=\"font-weight-bold\">{row.pricedata.last}</span> ({row.pricedata.sharevolume})</td>\r\n            <td class={textColor}>{row.pricedata.change} ({changePercent})</td>\r\n         </tr >\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { symbol: null, errorMessage: null, message: null }\r\n   }\r\n\r\n   getQuote = () => {\r\n      const symbol = this.state.symbol.toLowerCase().startsWith(\"us-\") ? this.state.symbol.slice(3) + \":us\" \r\n         : (this.state.symbol.toLowerCase().startsWith(\"c-\") ? this.state.symbol.slice(2) + \":cnx\" :  this.state.symbol);\r\n      axios.get('/quote?symbol=' + symbol + '&token=' + this.props.token)\r\n         .then(res => {\r\n            //console.log(res);\r\n            const quote = res.data;\r\n            //console.log(quote);\r\n            if (quote && quote.pricedata && quote.pricedata.last) {\r\n               //console.log(\"Got last price ... \");\r\n               const message = quote.equityinfo.longname + ' on ' + quote.key.exLgName;\r\n               this.setState({ ...this.state, \"errorMessage\": null, 'message': message });\r\n               this.props.handleSubmit(quote);\r\n            } else if (quote && quote.name === 'Error') {\r\n               const message = quote.name + \": \" + quote.message;\r\n               //console.log(message);\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Oops, something went wrong!\" });\r\n            }\r\n         })\r\n         .catch(err => {\r\n            //console.log(err);\r\n            if (err.response) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               //console.log(err.response.data);\r\n               //console.log(err.response.status);\r\n               //console.log(err.response.headers);\r\n               let message;\r\n               if (typeof err.response.data === 'string') {\r\n                  message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n               } else if (typeof err.response.data === 'object') {\r\n                  message = err.response.data.name + \": \" + err.response.data.message;\r\n               } else {\r\n                  message = \"Oops, something went wrong!\";\r\n               }\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Oops, something went wrong!\" });\r\n            }\r\n\r\n         });\r\n   }\r\n\r\n   handleInputChange = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value.trim(), \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayError = this.state.errorMessage === null ? false : true;\r\n      const displayMessage = this.state.message === null ? false : true;\r\n      return (\r\n         <Container>\r\n            <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} >\r\n                  <Col xs=\"9\">\r\n                     <Form.Control type=\"text\" autocorrect=\"off\" autocapitalize=\"off\" onChange={this.handleInputChange} placeholder=\"e.g. rba, us-tqqq, or c-j\" />\r\n                  </Col>\r\n                  {disableGet ? null : <Col xs=\"2\"><Button onClick={this.getQuote}>GO</Button></Col>}\r\n               </Form.Group>\r\n            </Form>\r\n            {displayMessage ? <Alert variant='info'>{this.state.message}</Alert> : null}\r\n            {displayError ? <Alert variant='warning'>{this.state.errorMessage}</Alert> : null}\r\n         </Container>\r\n      )\r\n   }\r\n}\r\nexport default GetQuote;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Display from './display';\r\nimport GetQuote from './input';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nrequire('dotenv').config();\r\n\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { latestQuotes: [] }\r\n   }\r\n\r\n   getQuote = quote => {\r\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes] });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand>\r\n               <Navbar.Brand href=\"#home\">\r\n                  {'finance.enjoyit.ca - 2020'}\r\n               </Navbar.Brand>\r\n            </Navbar>\r\n            <Alert variant=\"success\">\r\n               <Alert.Heading>FREE Real-Time Stock Quotes for Companies Listed on TSX</Alert.Heading>\r\n               <p>\r\n                  For US exchanges, start with \"us-\", like <code>us-tqqq</code>\r\n               </p>\r\n               <p>\r\n                  For Canadian Securities Exchange, start with \"c-\", like <code>c-j</code>\r\n               </p>\r\n            </Alert>\r\n            <GetQuote handleSubmit={this.getQuote} token={process.env.REACT_APP_TOKEN} />\r\n            {this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}