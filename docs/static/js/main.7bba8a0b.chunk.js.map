{"version":3,"sources":["component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/StockChart/StockChart.jsx","component/App/App.jsx","index.js"],"names":["QuoteDisplay","props","toggleShowDate","status","setState","showDate","toggleShowRange","showRange","toggleShowDiff","showDiff","state","Table","striped","bordered","hover","responsive","size","showStates","this","handleToggleShowDate","handleToggleShowRange","handleToggleShowDiff","handleSubmit","rows","data","Component","DisplayHeader","className","style","width","Button","boxShadow","border","background","padding","onClick","role","aria-label","color","DisplayBody","refreshQuote","exchange","symbol","toLowerCase","refreshChart","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","regularPrice","regularMarketPrice","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","marketState","postMarketTime","preMarketTime","preMarketChangePercent","preMarketChange","preMarketPrice","postMarketChangePercent","postMarketChange","postMarketPrice","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","key","OverlayTrigger","overlay","Tooltip","id","ProgressBar","variant","min","now","max","label","MessageDisplay","msg","useState","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleInputChange","handleSymbolUpdate","event","regex","RegExp","target","value","trim","test","handleExchangeUpdate","e","handleSymbolInputKeyDown","date","timerID","setInterval","tick","clearInterval","disableGet","undefined","length","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","onKeyDown","title","disabled","SymbolExchangeInputEnabler","handleClick","Notes","Alert","dismissible","Heading","StockChart","getTicks","chart","chartArray","range","push","x","days","currentDateTimestamp","includes","at","ticks","getTooltip","y","hour","minute","weekday","quotes","filter","time","quote","Math","round","chartPreviousClose","tickArray","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickLine","tickSize","axisLine","fontSize","interval","tickFormatter","timestamp","YAxis","domain","orientation","formatter","name","separator","contentStyle","content","active","payload","backgroundColor","ReferenceLine","stroke","alwaysShow","Label","position","fontWeight","Area","fill","require","config","App","updateMessage","errMsg","handleTabUpdate","getQuoteChart","oldState","updateQuotes","updatedQuotes","latestQuotes","quoteNums","foundMatching","showChart","yahooSymbol","showSymbolExchangeInput","axios","get","process","then","res","result","timeStamps","indicators","close","meta","errorMessage","error","code","description","catch","err","message","response","quoteResponse","longName","fullExchangeName","shortName","symbols","o","join","toggleSymbolExchangeInputShow","handleCloseChart","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","Nav","Link","Note","Modal","onHide","Tabs","activeKey","onSelect","Tab","eventKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bba8a0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './QuoteDisplay.css';\r\nimport { Button, ProgressBar, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass QuoteDisplay extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showRange: false, showDiff: false }\r\n   }\r\n\r\n   toggleShowDate = (status) => {\r\n      status ? this.setState({ showDate: false }) : this.setState({ showDate: true });\r\n   }\r\n\r\n   toggleShowRange = (status) => {\r\n      status ? this.setState({ showRange: false }) : this.setState({ showRange: true });\r\n   }\r\n\r\n   toggleShowDiff = (status) => {\r\n      status ? this.setState({ showDiff: false }) : this.setState({ showDiff: true });\r\n   }\r\n\r\n   render() {\r\n      //const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader\r\n               showStates={this.state}\r\n               handleToggleShowDate={this.toggleShowDate}\r\n               handleToggleShowRange={this.toggleShowRange}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n            <DisplayBody\r\n               rows={this.props.data}\r\n               showStates={this.state}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   \r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\">\r\n            <th className=\"text-left\" style={{ width: '25%' }}>\r\n               <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleSubmit(null, null, false)}><span role=\"img\" aria-label=\"Refresh\">&#x1F504;</span></Button>\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showStates.showDate ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>\r\n               {props.showStates.showRange ? <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button>}\r\n            </th>\r\n            <th style={{ width: '25%' }}>{props.showStates.showDiff ? <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{ border: 'none', background: 'none', color: 'black', padding: 0 }} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nclass DisplayBody extends Component {\r\n\r\n   refreshQuote = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, false);\r\n   }\r\n\r\n   refreshChart = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, true);\r\n   }\r\n\r\n   render() {\r\n      const rows = this.props.rows.map((row, index) => {\r\n         // independent of market state\r\n         const dateOptions = { month: 'numeric', day: 'numeric' };\r\n         const timeOptions = { hour12: false };\r\n         const dayLow = row.regularMarketDayLow.fmt;\r\n         const dayHigh = row.regularMarketDayHigh.fmt;\r\n         const regularPrice = row.regularMarketPrice.fmt;\r\n         const colonIndex = row.symbol.indexOf('.');\r\n         const symbolString = colonIndex > -1 ? row.symbol.slice(0, colonIndex) : row.symbol;\r\n         const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\";\r\n         const symColor = colonIndex > -1 ?\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"primary\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"danger\" :\r\n                  (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"dark\" :\r\n                     \"warning\"\r\n                  )\r\n               )\r\n            ) : \"success\";\r\n         const exchange = colonIndex > -1 ?\r\n            (row.symbol.slice(colonIndex + 1).toLowerCase() === 'to' ? \"tsx\" :\r\n               (row.symbol.slice(colonIndex + 1).toLowerCase() === 'cn' ? \"cse\" :\r\n                  (row.symbol.slice(colonIndex + 1).toLowerCase() === 'v' ? \"tsxv\" :\r\n                     \"neo\"\r\n                  )\r\n               )\r\n            ) : \"us\";\r\n\r\n         // market state dependent\r\n         let marketTime = row.regularMarketTime.raw;\r\n         let changePercent = row.regularMarketChangePercent.fmt;\r\n         let formattedChange = row.regularMarketChange.fmt;\r\n         let change = row.regularMarketChange.raw;\r\n         let price = row.regularMarketPrice.fmt;\r\n         if ((row.marketState === 'POST' || row.marketState === 'POSTPOST' || row.marketState === 'PREPRE') && row.postMarketTime) {\r\n            marketTime = row.postMarketTime.raw;\r\n            changePercent = row.postMarketChangePercent.fmt;\r\n            formattedChange = row.postMarketChange.fmt;\r\n            change = row.postMarketChange.raw;\r\n            price = row.postMarketPrice.fmt;\r\n         } else if (row.marketState === \"PRE\" && row.preMarketTime) {\r\n            marketTime = row.preMarketTime.raw;\r\n            changePercent = row.preMarketChangePercent.fmt;\r\n            formattedChange = row.preMarketChange.fmt;\r\n            change = row.preMarketChange.raw;\r\n            price = row.preMarketPrice.fmt;\r\n         }\r\n\r\n         const dateStr = new Date(marketTime * 1000).toLocaleDateString('en-CA', dateOptions);\r\n         const timeStr = new Date(marketTime * 1000).toLocaleTimeString('en-CA', timeOptions);\r\n         const textColor = change > 0 ? \"text-success\" : (change < 0 ? \"text-danger\" : \"text-dark\");\r\n\r\n         return (\r\n\r\n            <tr key={exchange + \"-\" + symbolString} className=\"text-right\">\r\n               <td className=\"text-left\">\r\n                  <Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => this.refreshChart(exchange, symbolString)} ><span role=\"img\" aria-label=\"Chart\">&#x1F4C8;</span></Button>\r\n                  {' '}<Button className={\"text-\" + symColor + \" font-weight-bold\"} style={{ boxShadow: 'none', border: 'none', background: 'none', padding: 0 }} onClick={() => this.refreshQuote(exchange, symbolString)} >{symbolString}</Button></td>\r\n               <td>\r\n                  {this.props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n               </td>\r\n               <td>\r\n                  {this.props.showStates.showRange\r\n                     ? <OverlayTrigger overlay={<Tooltip id={exchange + \"-\" + symbolString}>{dayLow +\"-\"+dayHigh}</Tooltip>}>\r\n                        <ProgressBar key={1} variant={symColor} min={dayLow} now={regularPrice} max={dayHigh} label={regularPrice}/>\r\n                     </OverlayTrigger>\r\n                     : <span>{currency}{price}</span>}\r\n               </td>\r\n               <td className={textColor}>\r\n                  {this.props.showStates.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span>}\r\n               </td>\r\n            </tr>\r\n         )\r\n      });\r\n\r\n      return <tbody>{rows}</tbody>;\r\n   }\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: '', date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {\r\n      this.props.handleInputChange(null, \"Quote for \" + this.state.symbol.toUpperCase() + ' on ' + this.state.exchange.toUpperCase() + \" exchange requested ...\");\r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);\r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      const regex = new RegExp('^[a-zA-Z0-9]{1,32}$');;\r\n      const symbol = event.target.value.trim()\r\n      if (regex.test(symbol)) {\r\n         this.setState({ \"symbol\": symbol });\r\n         this.props.handleInputChange(null, null);\r\n      } else {\r\n         this.setState({ \"symbol\": '' });\r\n         this.props.handleInputChange(\"Invalid symbol.\", null);\r\n      }\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange(null, null);\r\n   }\r\n\r\n   handleSymbolInputKeyDown = (e) => {\r\n      if (e.key === \"Enter\") {\r\n         this.getQuote();\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.timerID = setInterval(\r\n         () => this.tick(),\r\n         1000\r\n      );\r\n   }\r\n\r\n   tick() {\r\n      this.setState({\r\n         date: new Date()\r\n      });\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      clearInterval(this.timerID);\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n            <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row}>\r\n                  <Col xs=\"4\">\r\n                     <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                        <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                        <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                        <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                        <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                        <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                     </Form.Control>\r\n                  </Col>\r\n                  <Col xs=\"6\">\r\n                     <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" placeholder={\"symbol-\" + timeStr} size=\"sm\" value={this.state.symbol}\r\n                        onChange={this.handleSymbolUpdate}\r\n                        onKeyDown={this.handleSymbolInputKeyDown} />\r\n                  </Col>\r\n                  {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{ border: 'none', background: 'none' }} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                     : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{ border: 'none', background: 'none' }} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n                  }\r\n               </Form.Group>\r\n            </Form>\r\n         </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInputEnabler extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { date: new Date() }\r\n   }\r\n\r\n   handleClick = () => {\r\n      this.props.onClick();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n      \r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n        <Container className='mt-3 md-3'>\r\n            <Row>\r\n                <Col className=\"my-auto\">{timeStr}</Col>\r\n                <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n            </Row>               \r\n        </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>Enjoy exploring all available features <span role=\"img\" aria-label=\"Seedling\">🌱</span> <span role=\"img\" aria-label=\"Chart\">📈</span></p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\nimport {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ReferenceLine,\r\n    ResponsiveContainer,\r\n    Label\r\n} from \"recharts\";\r\n\r\nclass StockChart extends Component {\r\n\r\n\r\n    getTicks = (chart) => {\r\n        let chartArray = [];\r\n        if (chart.range === '1d') {\r\n            chartArray.push(chart.x[0] + 1800);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 2);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 4);\r\n            chartArray.push(chart.x[0] + 1800 + 3600 * 6);\r\n        } else if (chart.range === '5d') {\r\n            chartArray.push(chart.x[0]);\r\n            let days = 1;\r\n            let currentDateTimestamp = chart.x[0];\r\n            while (days < 5) {            \r\n                currentDateTimestamp = currentDateTimestamp + 3600 * 24;    \r\n                if (chart.x.includes( currentDateTimestamp )) {\r\n                    chartArray.push(currentDateTimestamp);\r\n                    days ++;                    \r\n                }\r\n                if (currentDateTimestamp > chart.x.at(-1)) break;\r\n            }\r\n        } else {\r\n            chartArray.push(chart.x[0]);\r\n            let ticks = 1;\r\n            let currentDateTimestamp = chart.x[0];\r\n            while (ticks < 4) {            \r\n                currentDateTimestamp = currentDateTimestamp + 3600 * 24 *10;    \r\n                if (chart.x.includes( currentDateTimestamp )) {\r\n                    chartArray.push(currentDateTimestamp);\r\n                    ticks ++;                    \r\n                }\r\n                if (currentDateTimestamp > chart.x.at(-1)) break;\r\n            }        \r\n        }\r\n        return chartArray;\r\n    }\r\n\r\n    getTooltip = (x, y) => {\r\n        if (this.props.chart.range === '1d') {\r\n            return new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        } else if (this.props.chart.range === '5d') {\r\n            return new Date(x*1000).toLocaleDateString('en-CA', {weekday: 'short', month: 'short', day: 'numeric'}) + \", \" + new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        } else {\r\n            return new Date(x*1000).toLocaleDateString('en-CA', {month: 'short', day: 'numeric'}) + \", \" + new Date(x*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" }) + \" - \" + y;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // prepare data in chart\r\n        const quotes = this.props.chart.y.filter(value => value !== null)\r\n            .map((value, index) => ({\r\n                time: this.props.chart.x[index],\r\n                quote: Math.round(value * 100) / 100\r\n            }));\r\n\r\n        const chartPreviousClose = this.props.chart.chartPreviousClose;\r\n        \r\n        const tickArray = this.getTicks(this.props.chart);\r\n\r\n        const showTick = timestamp => {\r\n            if (this.props.chart.range === '1d') {\r\n                return new Date(timestamp*1000).toLocaleTimeString(\"en-CA\", { hour12: false, hour: \"2-digit\", minute: \"2-digit\" });\r\n            } else if (this.props.chart.range === '5d') {\r\n                return new Date(timestamp*1000).toLocaleDateString('en-CA', {weekday: 'short'});\r\n            } else {\r\n                return new Date(timestamp*1000).toLocaleDateString('en-CA', {month: 'short', day: 'numeric'});\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ResponsiveContainer width={'100%'} height={300}>\r\n                <AreaChart width={500} height={400} data={quotes} className=\"my-3\">\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" tickLine={false} tickSize={8} axisLine={false} tick={{ fontSize: '0.8rem' }} ticks={tickArray} interval=\"preserveStartEnd\"\r\n                        tickFormatter= {showTick} type='category' />\r\n                    <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} orientation='right' tickLine={false} tickSize={0} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                    <Tooltip formatter={(value, name, props) => [value, \"\"]} separator={''} contentStyle={{ fontSize: '0.8rem' }} content={({ active, payload, label }) => {\r\n                        if (active && payload && payload.length) {\r\n                            return (\r\n                                <div className=\"custom-tooltip\" style={{ backgroundColor: '#ddd', fontSize: '0.8rem', padding: '0 0.5rem' }}>\r\n                                    {/*<p className=\"label\">{`${label} - ${payload[0].value}`}</p>*/}\r\n                                    <p className=\"label\">{this.getTooltip(label, payload[0].value)}</p>\r\n                                </div>\r\n                            );\r\n                        } else { return <></> }\r\n                    }} />\r\n                    <ReferenceLine\r\n                        y={chartPreviousClose}\r\n                        stroke=\"black\"\r\n                        strokeDasharray=\"3 3\"\r\n                        alwaysShow={true}\r\n                    >\r\n                        <Label value={chartPreviousClose} position={\"bottom\"} fontSize={'0.8rem'} fontWeight={'bold'} />\r\n                    </ReferenceLine>\r\n\r\n                    <Area type=\"monotone\" dataKey=\"quote\" stroke=\"#8884d8\" fill={Math.round(this.props.chart.y.at(-1) * 100) / 100 > chartPreviousClose ? \"green\" : \"red\"} />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StockChart;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\nimport StockChart from \"../StockChart/StockChart\";\r\nimport \"./App.css\";\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         \"errorMessage\": null,\r\n         'message': null,\r\n         showSymbolExchangeInput: true,\r\n         showChart: false,\r\n         chart: null,\r\n         latestQuotes: []\r\n      }\r\n   }\r\n\r\n   updateMessage = (errMsg, msg) => {\r\n      this.setState({ \"errorMessage\": errMsg, 'message': msg });\r\n   }\r\n\r\n\r\n   handleTabUpdate = (key) => {\r\n      this.getQuoteChart(this.state.chart.symbol, this.state.chart.exchange, false, true, key);\r\n      this.setState( oldState => ({ chart: { ...oldState.chart, range: key}}));\r\n   }\r\n\r\n   updateQuotes = (quote) => {\r\n      let updatedQuotes = [...this.state.latestQuotes];\r\n      const quoteNums = this.state.latestQuotes.length;\r\n      let foundMatching = false;\r\n      for (let index = 0; index < quoteNums; index++) {\r\n         let row = updatedQuotes[index];\r\n         if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = { ...quote.regularMarketDayHigh };\r\n            row.regularMarketDayLow = { ...quote.regularMarketDayLow };\r\n            row.regularMarketChangePercent = { ...quote.regularMarketChangePercent };\r\n            row.regularMarketChange = { ...quote.regularMarketChange };\r\n            row.regularMarketPrice = { ...quote.regularMarketPrice };\r\n            row.regularMarketTime = { ...quote.regularMarketTime };\r\n            if ((quote.marketState === \"POST\" || quote.marketState === \"POSTPOST\" || quote.marketState === \"PREPRE\") && quote.postMarketTime) {\r\n               row.postMarketPrice = { ...quote.postMarketPrice };\r\n               row.postMarketTime = { ...quote.postMarketTime };\r\n               row.postMarketChangePercent = { ...quote.postMarketChangePercent };\r\n               row.postMarketChange = { ...quote.postMarketChange }\r\n            } else if (quote.marketState === \"PRE\" && quote.preMarketTime) {\r\n               row.preMarketPrice = { ...quote.preMarketPrice };\r\n               row.preMarketTime = { ...quote.preMarketTime };\r\n               row.preMarketChangePercent = { ...quote.preMarketChangePercent };\r\n               row.preMarketChange = { ...quote.preMarketChange }\r\n            }\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!foundMatching) {\r\n         updatedQuotes = [quote, ...updatedQuotes];\r\n      }\r\n\r\n      this.setState({ latestQuotes: updatedQuotes });\r\n   }\r\n\r\n   getQuoteChart = (symbol, exchange, show, showChart = false, range = '1d') => {\r\n\r\n\r\n      //console.log(\"index.js - symbol: \" + symbol);\r\n      //console.log(\"index.js - exchange: \" + exchange);\r\n      const yahooSymbol = exchange === \"tsx\" ? symbol + \".to\"\r\n         : (exchange === \"cse\" ? symbol + \".cn\"\r\n            : (exchange === \"tsxv\" ? symbol + \".v\"\r\n               : (exchange === \"neo\" ? symbol + \".ne\" : symbol)));\r\n      \r\n      const interval = range === \"1d\" ? \"2m\" : (range === \"5d\" ? \"15m\" : \"30m\");\r\n\r\n      if (showChart) {\r\n         this.setState({\r\n            showSymbolExchangeInput: show, showChart: showChart\r\n         });\r\n\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v8/finance/chart/' + yahooSymbol \r\n                                                   + '?includePrePost=false&interval=' + interval + '&useYfid=true&range=' + range)\r\n            .then(res => {\r\n               //console.log(res);\r\n               const chartArray = res.data.chart.result;\r\n               //console.log(quotes);\r\n               if (chartArray && chartArray.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const timeStamps = chartArray[0].timestamp;\r\n                  //console.log(message);\r\n                  if (timeStamps && timeStamps.length > 0) {\r\n                     this.setState({\r\n                        chart: { range: range, exchange: exchange, symbol: symbol, x: timeStamps, y: chartArray[0].indicators.quote[0].close, chartPreviousClose: chartArray[0].meta.chartPreviousClose },\r\n                        errorMessage: null\r\n                     });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               } else {\r\n                  if (res.data.chart.error) {\r\n                     const code = res.data.chart.error.code;\r\n                     const description = res.data.chart.error.description;\r\n                     this.setState({ chart: null, \"errorMessage\": code + \": \" + description });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               }\r\n            });\r\n      } else {\r\n         this.setState({ showSymbolExchangeInput: show, showChart: false });\r\n         if (symbol) {\r\n            axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n               .then(res => {\r\n                  //console.log(res);\r\n                  const quotes = res.data.quoteResponse.result;\r\n                  //console.log(quotes);\r\n                  if (quotes && quotes.length > 0) {\r\n                     //console.log(\"Got last price ... \");\r\n                     const message = quotes[0].longName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                        : (quotes[0].shortName ? quotes[0].shortName + ' on ' + quotes[0].fullExchangeName : null);\r\n                     //console.log(message);\r\n                     if (message) {\r\n                        this.setState({ \"errorMessage\": null, 'message': message, chart: null });\r\n                        this.updateQuotes(quotes[0]);\r\n                     } else {\r\n                        this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                     }\r\n                  } else {\r\n                     this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                  }\r\n               })\r\n               .catch(err => {\r\n                  //console.log(err);\r\n                  let message;\r\n                  if (err.response && err.response.data) {\r\n                     // The request was made and the server responded with a status code\r\n                     // that falls out of the range of 2xx\r\n                     //console.log(err.response.data);\r\n                     //console.log(err.response.status);\r\n                     //console.log(err.response.headers);\r\n                     if (typeof err.response.data === 'string') {\r\n                        message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                     } else {\r\n                        message = err.response.data.name + \": \" + err.response.data.message;\r\n                     }\r\n                     this.setState({ \"errorMessage\": message, chart: null });\r\n                  } else {\r\n                     message = err.name + ' (' + err.code + '): ' + err.message;\r\n                     this.setState({ \"errorMessage\": message, chart: null });\r\n                  }\r\n               });\r\n         } else if (this.state.latestQuotes && this.state.latestQuotes.length > 0) {\r\n            // refresh to get quotes of all current symbols\r\n            const symbols = this.state.latestQuotes.map(o => o.symbol).join();\r\n            axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + symbols)\r\n               .then(res => {\r\n                  //console.log(res);\r\n                  const quotes = res.data.quoteResponse.result;\r\n                  //console.log(quotes);\r\n                  if (quotes && quotes.length > 0) {\r\n                     //console.log(\"Got last price ... \");\r\n                     const message = 'All ' + quotes.length + ' quotes updated.';\r\n                     //console.log(message);\r\n                     if (message) {\r\n                        this.setState({ latestQuotes: quotes, errorMessage: null, message: message, chart: null });\r\n                     } else {\r\n                        this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                     }\r\n                  } else {\r\n                     this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                  }\r\n               })\r\n               .catch(err => {\r\n                  //console.log(err);\r\n                  let message;\r\n                  if (err.response && err.response.data) {\r\n                     // The request was made and the server responded with a status code\r\n                     // that falls out of the range of 2xx\r\n                     //console.log(err.response.data);\r\n                     //console.log(err.response.status);\r\n                     //console.log(err.response.headers);\r\n                     if (typeof err.response.data === 'string') {\r\n                        message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                     } else {\r\n                        message = err.response.data.name + \": \" + err.response.data.message;\r\n                     }\r\n                     this.setState({ \"errorMessage\": message, chart: null });\r\n                  } else {\r\n                     message = err.name + ' (' + err.code + '): ' + err.message;\r\n                     this.setState({ \"errorMessage\": message, chart: null });\r\n                  }\r\n               });\r\n         }\r\n      }\r\n   }\r\n\r\n   toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n   }\r\n\r\n   handleCloseChart = () => {\r\n      this.setState({ showChart: false, chart: null });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                     <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                     <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>\r\n            <Note />\r\n            {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuoteChart} handleInputChange={this.updateMessage} />\r\n               : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} />}\r\n            {this.state.message && <MessageDisplay msg={this.state.message} />}\r\n            {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n            {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuoteChart} />}\r\n            {this.state.chart &&\r\n               <Modal show={this.state.showChart} onHide={this.handleCloseChart}>\r\n                  <Modal.Body>\r\n                     <p className=\"text-center\">{this.state.chart.symbol.toUpperCase()} on {this.state.chart.exchange.toUpperCase()} Exchange <br />\r\n                        <small>{new Date(this.state.chart.x[0] * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x[0] * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })} - {new Date(this.state.chart.x.at(-1) * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x.at(-1) * 1000).toLocaleTimeString('en-CA', { hour12: false, hour: '2-digit', minute: '2-digit' })}</small>\r\n                     </p>\r\n                     <Tabs id=\"chart-tab\" activeKey={this.state.chart.range} onSelect={(key) => this.handleTabUpdate(key)} >\r\n                        <Tab eventKey=\"1d\" title=\"1D\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"5d\" title=\"5D\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"1mo\" title=\"1M\">\r\n                           <StockChart chart={this.state.chart} />\r\n                        </Tab>\r\n                     </Tabs>\r\n                  </Modal.Body>\r\n               </Modal>}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}