{"version":3,"sources":["component/QuoteDisplay/QuoteDisplay.jsx","component/MessageDisplay/MessageDisplay.jsx","component/SymbolExchangeInput/SymbolExchangeInput.jsx","component/SymbolExchangeInputEnabler/SymbolExchangeInputEnabler.jsx","component/Note/Note.jsx","component/App/App.jsx","index.js"],"names":["QuoteDisplay","props","toggleShowDate","status","setState","showDate","toggleShowRange","showRange","toggleShowDiff","showDiff","state","Table","striped","bordered","hover","responsive","size","showStates","this","handleToggleShowDate","handleToggleShowRange","handleToggleShowDiff","rows","data","handleSubmit","Component","DisplayHeader","className","style","width","Button","border","background","padding","onClick","role","aria-label","color","DisplayBody","refreshQuote","exchange","symbol","toLowerCase","refreshChart","map","row","index","dayLow","regularMarketDayLow","fmt","dayHigh","regularMarketDayHigh","colonIndex","indexOf","symbolString","slice","currency","toUpperCase","symColor","marketTime","regularMarketTime","raw","changePercent","regularMarketChangePercent","formattedChange","regularMarketChange","change","price","regularMarketPrice","marketState","postMarketTime","preMarketTime","preMarketChangePercent","preMarketChange","preMarketPrice","postMarketChangePercent","postMarketChange","postMarketPrice","dateStr","Date","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour12","textColor","key","ProgressBar","variant","min","now","max","MessageDisplay","msg","useState","show","setShow","Toast","delay","autohide","onClose","Body","SymbolExchangeInput","getQuote","handleSymbolUpdate","event","target","value","trim","handleInputChange","handleExchangeUpdate","e","date","timerID","setInterval","tick","clearInterval","disableGet","undefined","length","Container","Form","autoComplete","onSubmit","preventDefault","Group","as","Row","Col","xs","Control","onChange","placeholder","defaultValue","type","autoCorrect","autoCapitalize","title","disabled","SymbolExchangeInputEnabler","handleClick","Notes","Alert","dismissible","Heading","require","config","App","removeMessage","updateQuotes","quote","updatedQuotes","latestQuotes","quoteNums","foundMatching","getQuoteChart","showChart","yahooSymbol","showSymbolExchangeInput","axios","get","process","then","res","chartArray","chart","result","timeStamps","timestamp","x","y","indicators","close","previousClose","meta","errorMessage","error","code","description","catch","err","message","response","includes","name","quotes","quoteResponse","longName","shortName","fullExchangeName","toggleSymbolExchangeInputShow","handleCloseChart","time","hour","minute","Math","round","Navbar","bg","sticky","expand","Brand","href","Badge","Toggle","aria-controls","Collapse","id","Nav","Link","Note","Modal","onHide","at","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickLine","tickSize","axisLine","fontSize","YAxis","domain","orientation","Tooltip","formatter","separator","contentStyle","content","active","payload","label","backgroundColor","ReferenceLine","stroke","isOverflow","Label","position","fontWeight","Area","fill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc618b1b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './QuoteDisplay.css';\r\nimport { Button, ProgressBar, } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass QuoteDisplay extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { showDate: false, showRange: false, showDiff: false}\r\n   }\r\n\r\n   toggleShowDate = (status) => {      \r\n      status ? this.setState({showDate: false}) : this.setState({showDate: true});\r\n   } \r\n\r\n   toggleShowRange = (status) => {      \r\n      status ? this.setState({showRange: false}) : this.setState({showRange: true});\r\n   }\r\n\r\n   toggleShowDiff = (status) => {      \r\n      status ? this.setState({showDiff: false}) : this.setState({showDiff: true});\r\n   }\r\n\r\n   render() {\r\n      //const { data } = this.props;\r\n      //console.log(\"ok\");\r\n      //console.log(\"Show Date: \" + this.state.showDate);\r\n      return (\r\n         <Table striped bordered hover responsive=\"sm\" size=\"sm\">\r\n            <DisplayHeader \r\n               showStates={this.state} \r\n               handleToggleShowDate={this.toggleShowDate} \r\n               handleToggleShowRange={this.toggleShowRange}\r\n               handleToggleShowDiff={this.toggleShowDiff}\r\n            />\r\n            <DisplayBody \r\n               rows={this.props.data} \r\n               showStates={this.state}\r\n               handleSubmit={this.props.handleSubmit}\r\n            />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = props => {\r\n   //console.log(props);\r\n   return (\r\n      <thead>\r\n         <tr className=\"text-right\"> \r\n            <th className=\"text-left\" style={{width: '25%'}}>\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showDate ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}}  onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Date\">&#x1F4C6;</span></Button> : <Button className=\"shadow-none\"  style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowDate(props.showStates.showDate)}><span role=\"img\" aria-label=\"Time\">&#x23F2;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>\r\n               {props.showStates.showRange ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Range\">&#x1F4CA;</span></Button> : <Button className=\"shadow-none\" style={{border: 'none', background: 'none', padding: 0}} onClick={() => props.handleToggleShowRange(props.showStates.showRange)}><span role=\"img\" aria-label=\"Price\">&#x1F4B0;</span></Button> }\r\n            </th>\r\n            <th style={{width: '25%'}}>{props.showStates.showDiff ? <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>&#x00B1;</span></Button> : <Button className=\"shadow-none\" style={{border: 'none', background: 'none', color: 'black', padding: 0}} onClick={() => props.handleToggleShowDiff(props.showStates.showDiff)}><span>%</span></Button>}</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nclass DisplayBody extends Component {\r\n\r\n   refreshQuote = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, false);\r\n   }\r\n\r\n   refreshChart = (exchange, symbol) => {\r\n      this.props.handleSubmit(symbol.toLowerCase(), exchange.toLowerCase(), false, true);\r\n   }\r\n      \r\n   render() {\r\n      const rows = this.props.rows.map((row, index) => {\r\n         // independent of market state\r\n         const dateOptions = { month: 'numeric', day: 'numeric' };\r\n         const timeOptions = { hour12: false };    \r\n         const dayLow = row.regularMarketDayLow.fmt;\r\n         const dayHigh = row.regularMarketDayHigh.fmt;\r\n         const colonIndex = row.symbol.indexOf('.');\r\n         const symbolString = colonIndex > -1 ? row.symbol.slice(0,colonIndex) : row.symbol;\r\n         const currency = row.currency.toUpperCase() === 'CAD' ? \"C$\" : \"$\" ;  \r\n         const symColor = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"primary\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"danger\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"dark\" : \r\n                   \"warning\" \r\n                 )\r\n              )           \r\n            ) : \"success\";\r\n         const exchange = colonIndex > -1 ? \r\n            (row.symbol.slice(colonIndex+1).toLowerCase() === 'to' ? \"tsx\" : \r\n              (row.symbol.slice(colonIndex+1).toLowerCase() === 'cn' ? \"cse\" : \r\n                 (row.symbol.slice(colonIndex+1).toLowerCase() === 'v' ? \"tsxv\" : \r\n                   \"neo\" \r\n                 )\r\n              )           \r\n            ) : \"us\";\r\n\r\n         // market state dependent\r\n         let marketTime = row.regularMarketTime.raw;\r\n         let changePercent = row.regularMarketChangePercent.fmt;\r\n         let formattedChange = row.regularMarketChange.fmt;\r\n         let change = row.regularMarketChange.raw;\r\n         let price = row.regularMarketPrice.fmt;\r\n         if ( (row.marketState === 'POST' || row.marketState === 'POSTPOST' || row.marketState === 'PREPRE') && row.postMarketTime ) {\r\n            marketTime = row.postMarketTime.raw;\r\n            changePercent = row.postMarketChangePercent.fmt;\r\n            formattedChange = row.postMarketChange.fmt;\r\n            change = row.postMarketChange.raw;\r\n            price = row.postMarketPrice.fmt;            \r\n         } else if (row.marketState === \"PRE\" && row.preMarketTime) {\r\n            marketTime = row.preMarketTime.raw;\r\n            changePercent = row.preMarketChangePercent.fmt;\r\n            formattedChange = row.preMarketChange.fmt;\r\n            change = row.preMarketChange.raw;\r\n            price = row.preMarketPrice.fmt;  \r\n         }\r\n\r\n         const dateStr = new Date(marketTime*1000).toLocaleDateString('en-CA', dateOptions);\r\n         const timeStr = new Date(marketTime*1000).toLocaleTimeString('en-CA', timeOptions);\r\n         const textColor = change > 0 ? \"text-success\" : (change < 0 ? \"text-danger\" : \"text-dark\");\r\n         \r\n         return (\r\n   \r\n            <tr key={exchange+\"-\"+symbolString} className=\"text-right\" >\r\n               <td className=\"text-left\">\r\n               <Button style={{border: 'none', background: 'none', padding: 0}} className={\"noBorder shadow-none text-\" + symColor + \" font-weight-bold\"} onClick={() => this.refreshChart(exchange, symbolString)} ><span role=\"img\" aria-label=\"Chart\">&#x1F4C8;</span></Button>\r\n               {' '}<Button style={{border: 'none', background: 'none', padding: 0}} className={\"noBorder shadow-none text-\" + symColor + \" font-weight-bold\"} onClick={() => this.refreshQuote(exchange, symbolString)} >{symbolString}</Button></td>\r\n               <td>\r\n               {this.props.showStates.showDate ? <span>{dateStr}</span> : <span>{timeStr}</span>}\r\n               </td>\r\n               <td className='align-middle'>\r\n                  {this.props.showStates.showRange ? <ProgressBar variant={symColor} min={dayLow} now={price} max={dayHigh}/>: <span>{currency}{price}</span> }\r\n               </td>\r\n               <td className={textColor}>\r\n                  {this.props.showStates.showDiff ? <span>{formattedChange}</span> : <span>{changePercent}</span> }\r\n               </td>\r\n            </tr>\r\n         )\r\n      });\r\n   \r\n      return <tbody>{rows}</tbody>;\r\n   }\r\n}\r\n\r\nexport default QuoteDisplay;\r\n","import React, { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst MessageDisplay = props => {\r\n    const msg = props.msg;\r\n    const [show, setShow] = useState(true);\r\n \r\n    \r\n    return (\r\n       <Toast delay={3000} autohide show={show} onClose={() => setShow(false)}><Toast.Body>{msg}</Toast.Body></Toast>\r\n    )\r\n    \r\n };\r\n\r\n export default MessageDisplay;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInput extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { exchange: 'TSX', symbol: null, date: new Date() }\r\n   }\r\n\r\n   getQuote = () => {            \r\n      this.props.handleSubmit(this.state.symbol.toLowerCase(), this.state.exchange.toLowerCase(), true);      \r\n   }\r\n\r\n   handleSymbolUpdate = (event) => {\r\n      this.setState({ \"symbol\": event.target.value.trim() });\r\n      this.props.handleInputChange();\r\n   }\r\n\r\n   handleExchangeUpdate = e => {\r\n      this.setState({ \"exchange\": e.target.value.trim() });\r\n      this.props.handleInputChange();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n         <Container className='mt-3 md-3'>\r\n         <Form autoComplete=\"on\" onSubmit={e => e.preventDefault()} >\r\n            <Form.Group as={Row}>\r\n               <Col xs=\"4\">\r\n                  <Form.Control as=\"select\" onChange={this.handleExchangeUpdate} placeholder=\"Exchange\" defaultValue=\"TSX\" size=\"sm\">\r\n                     <option value=\"US\" className='text-success font-weight-bold'>US</option>\r\n                     <option value=\"TSX\" className='text-primary font-weight-bold'>TSX</option>\r\n                     <option value=\"TSXV\" className='text-dark font-weight-bold'>TSXV</option>\r\n                     <option value=\"CSE\" className='text-danger font-weight-bold'>CSE</option>\r\n                     <option value=\"NEO\" className='text-warning font-weight-bold'>NEO</option>\r\n                  </Form.Control>\r\n               </Col>\r\n               <Col xs=\"6\">\r\n                  <Form.Control type=\"text\" autoCorrect=\"off\" autoCapitalize=\"off\" onChange={this.handleSymbolUpdate} placeholder={\"symbol-\" + timeStr} size=\"sm\" />\r\n               </Col>\r\n               {disableGet ? <Col xs=\"2\"><Button title=\"enter symbol to enable clicking\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote} disabled><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col> \r\n                  : <Col xs=\"2\"><Button title=\"click to get quote\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.getQuote}><span role=\"img\" aria-label=\"eyes\">&#x1f440;</span></Button></Col>\r\n               }\r\n            </Form.Group>\r\n         </Form>       \r\n      </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass SymbolExchangeInputEnabler extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { date: new Date() }\r\n   }\r\n\r\n   handleClick = () => {\r\n      this.props.onClick();\r\n   }\r\n\r\n   componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n   render() {\r\n      \r\n      const timeOptions = { hour12: false };\r\n      const timeStr = this.state.date.toLocaleTimeString('en-CA', timeOptions);\r\n\r\n      return (\r\n        <Container className='mt-3 md-3'>\r\n            <Row>\r\n                <Col className=\"my-auto\">{timeStr}</Col>\r\n                <Col className=\"text-right\"><Button title=\"show symbol and excahnge input\" className=\"shadow-none\" style={{border: 'none', background: 'none'}} onClick={this.handleClick} ><span role=\"img\" aria-label=\"eye\">&#x1f441;</span></Button></Col>\r\n            </Row>               \r\n        </Container>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SymbolExchangeInputEnabler;\r\n","import React, { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Notes = () => {\r\n    const [show, setShow] = useState(true);\r\n \r\n    if (show) {\r\n       return (\r\n          <Alert variant=\"primary\" dismissible onClose={() => setShow(false)}>\r\n             <Alert.Heading>FREE Real-Time Quotes for North American Stocks</Alert.Heading>\r\n             <p>Enjoy exploring all available features <span role=\"img\" aria-label=\"Seedling\">🌱</span> <span role=\"img\" aria-label=\"Chart\">📈</span></p>            \r\n          </Alert>         \r\n       )\r\n    }\r\n    return <></>;\r\n };\r\n\r\n export default Notes;","import React, { Component } from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport axios from 'axios';\r\n\r\n// Custom components for this application\r\nimport QuoteDisplay from '../QuoteDisplay/QuoteDisplay';\r\nimport MessageDisplay from '../MessageDisplay/MessageDisplay';\r\nimport SymbolExchangeInput from '../SymbolExchangeInput/SymbolExchangeInput';\r\nimport SymbolExchangeInputEnabler from '../SymbolExchangeInputEnabler/SymbolExchangeInputEnabler';\r\nimport Note from '../Note/Note';\r\n\r\nimport {\r\n   AreaChart,\r\n   Area,\r\n   XAxis,\r\n   YAxis,\r\n   CartesianGrid,\r\n   Tooltip,\r\n   ReferenceLine,\r\n   ResponsiveContainer,\r\n   Label\r\n} from \"recharts\";\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\n/**\r\n * App should render the main content/component/container for an application\r\n */\r\nclass App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         latestQuotes: [],\r\n         \"errorMessage\": null,\r\n         'message': null,\r\n         showSymbolExchangeInput: true,\r\n         showChart: false,\r\n         chart: null\r\n      }\r\n   }\r\n\r\n   removeMessage = () => {\r\n      this.setState({ \"errorMessage\": null, 'message': null });\r\n   }\r\n\r\n\r\n   updateQuotes = (quote) => {\r\n      let updatedQuotes = [...this.state.latestQuotes];\r\n      const quoteNums = this.state.latestQuotes.length;\r\n      let foundMatching = false;\r\n      for (let index = 0; index < quoteNums; index++) {\r\n         let row = updatedQuotes[index];\r\n         if (row.symbol === quote.symbol) {\r\n            foundMatching = true;\r\n            row.marketState = quote.marketState;\r\n            row.regularMarketDayHigh = { ...quote.regularMarketDayHigh };\r\n            row.regularMarketDayLow = { ...quote.regularMarketDayLow };\r\n            row.regularMarketChangePercent = { ...quote.regularMarketChangePercent };\r\n            row.regularMarketChange = { ...quote.regularMarketChange };\r\n            row.regularMarketPrice = { ...quote.regularMarketPrice };\r\n            row.regularMarketTime = { ...quote.regularMarketTime };\r\n            if ((quote.marketState === \"POST\" || quote.marketState === \"POSTPOST\" || quote.marketState === \"PREPRE\") && quote.postMarketTime) {\r\n               row.postMarketPrice = { ...quote.postMarketPrice };\r\n               row.postMarketTime = { ...quote.postMarketTime };\r\n               row.postMarketChangePercent = { ...quote.postMarketChangePercent };\r\n               row.postMarketChange = { ...quote.postMarketChange }\r\n            } else if (quote.marketState === \"PRE\" && quote.preMarketTime) {\r\n               row.preMarketPrice = { ...quote.preMarketPrice };\r\n               row.preMarketTime = { ...quote.preMarketTime };\r\n               row.preMarketChangePercent = { ...quote.preMarketChangePercent };\r\n               row.preMarketChange = { ...quote.preMarketChange }\r\n            }\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!foundMatching) {\r\n         updatedQuotes = [quote, ...updatedQuotes];\r\n      }\r\n\r\n      this.setState({ latestQuotes: updatedQuotes });\r\n   }\r\n\r\n   getQuoteChart = (symbol, exchange, show, showChart) => {\r\n\r\n\r\n      //console.log(\"index.js - symbol: \" + symbol);\r\n      //console.log(\"index.js - exchange: \" + exchange);\r\n      const yahooSymbol = exchange === \"tsx\" ? symbol + \".to\"\r\n         : (exchange === \"cse\" ? symbol + \".cn\"\r\n            : (exchange === \"tsxv\" ? symbol + \".v\"\r\n               : (exchange === \"neo\" ? symbol + \".ne\" : symbol)));\r\n\r\n      if (showChart) {\r\n         this.setState({\r\n            showSymbolExchangeInput: show, showChart: showChart\r\n         });\r\n\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v8/finance/chart/' + yahooSymbol + '?includePrePost=false&interval=2m&useYfid=true&range=1d')\r\n            .then(res => {\r\n               //console.log(res);\r\n               const chartArray = res.data.chart.result;\r\n               //console.log(quotes);\r\n               if (chartArray && chartArray.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const timeStamps = chartArray[0].timestamp;\r\n                  //console.log(message);\r\n                  if (timeStamps && timeStamps.length > 0) {\r\n                     this.setState({\r\n                        chart: { exchange: exchange, symbol: symbol, x: timeStamps, y: chartArray[0].indicators.quote[0].close, previousClose: chartArray[0].meta.previousClose },\r\n                        errorMessage: null\r\n                     });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               } else {\r\n                  if (res.data.chart.error) {\r\n                     const code = res.data.chart.error.code;\r\n                     const description = res.data.chart.error.description;\r\n                     this.setState({ chart: null, \"errorMessage\": code + \": \" + description });\r\n                  } else {\r\n                     this.setState({ chart: null, \"errorMessage\": \"Sorry, no data found.\" });\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ chart: null, \"errorMessage\": message });\r\n               }\r\n            });\r\n      } else {\r\n         this.setState({ showSymbolExchangeInput: show, showChart: showChart });\r\n         axios.get(process.env.REACT_APP_CORS_PROXY + '/https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&symbols=' + yahooSymbol)\r\n            .then(res => {\r\n               //console.log(res);\r\n               const quotes = res.data.quoteResponse.result;\r\n               //console.log(quotes);\r\n               if (quotes && quotes.length > 0) {\r\n                  //console.log(\"Got last price ... \");\r\n                  const message = quotes[0].longName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName\r\n                     : (quotes[0].shortName ? quotes[0].longName + ' on ' + quotes[0].fullExchangeName : null);\r\n                  //console.log(message);\r\n                  if (message) {\r\n                     this.setState({ \"errorMessage\": null, 'message': message, chart: null });\r\n                     this.updateQuotes(quotes[0]);\r\n                  } else {\r\n                     this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n                  }\r\n               } else {\r\n                  this.setState({ \"errorMessage\": \"Sorry, no data found.\", chart: null });\r\n               }\r\n            })\r\n            .catch(err => {\r\n               //console.log(err);\r\n               let message;\r\n               if (err.response && err.response.data) {\r\n                  // The request was made and the server responded with a status code\r\n                  // that falls out of the range of 2xx\r\n                  //console.log(err.response.data);\r\n                  //console.log(err.response.status);\r\n                  //console.log(err.response.headers);\r\n                  if (typeof err.response.data === 'string') {\r\n                     message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n                  } else {\r\n                     message = err.response.data.name + \": \" + err.response.data.message;\r\n                  }\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               } else {\r\n                  message = err.name + ' (' + err.code + '): ' + err.message;\r\n                  this.setState({ \"errorMessage\": message, chart: null });\r\n               }\r\n            });\r\n      }\r\n   }\r\n\r\n   toggleSymbolExchangeInputShow = () => {\r\n      this.setState(state => ({\r\n         showSymbolExchangeInput: !state.showSymbolExchangeInput\r\n      }));\r\n   }\r\n\r\n   handleCloseChart = () => {\r\n      this.setState({ showChart: false, chart: null });\r\n   }\r\n   \r\n   render() {\r\n      const quotes = this.state.chart && this.state.chart.x.map((value, index) => ({\r\n         time: new Date(value * 1000).toLocaleTimeString(\"en-CA\", {\r\n            hour12: false,\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\"\r\n         }),\r\n         quote: Math.round(this.state.chart.y[index] * 100) / 100\r\n      }));\r\n      const previousClose = this.state.chart && this.state.chart.previousClose;\r\n\r\n      return (\r\n         <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n               <Navbar.Brand>\r\n                  <span role=\"img\" aria-label=\"Stock\">&#x1F4C8;</span> <a href=\"https://enjoyit.ca\" title=\"go to enjoyit.ca\">enjoyit.ca</a> <Badge variant=\"light\">v{process.env.REACT_APP_VERSION}</Badge>\r\n               </Navbar.Brand>\r\n               <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n               <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                  <Nav>\r\n                     <Nav.Link href=\"mailto:feedback@enjoyit.ca\" title=\"provide feedback to feedback@enjoyit.ca\">Feedback</Nav.Link>\r\n                     <Nav.Link href=\"mailto:donations@enjoyit.ca\" title=\"eTransfer less than $10 to donations@enjoyit.ca\">Donations</Nav.Link>\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Navbar>\r\n            <Note />\r\n            {this.state.showSymbolExchangeInput ? <SymbolExchangeInput handleSubmit={this.getQuoteChart} handleInputChange={this.removeMessage} />\r\n               : <SymbolExchangeInputEnabler onClick={this.toggleSymbolExchangeInputShow} />}\r\n            {this.state.message && <MessageDisplay msg={this.state.message} />}\r\n            {this.state.errorMessage && <Alert variant='warning'>{this.state.errorMessage}</Alert>}\r\n            {this.state.latestQuotes.length > 0 && <QuoteDisplay data={this.state.latestQuotes} handleSubmit={this.getQuoteChart} />}\r\n            {this.state.chart &&\r\n               <Modal show={this.state.showChart} onHide={this.handleCloseChart}>\r\n\r\n                  <Modal.Body>\r\n                     <p className=\"text-center\">{this.state.chart.symbol.toUpperCase()} on {this.state.chart.exchange.toUpperCase()} Exchange <br />\r\n                        <small>{new Date(this.state.chart.x[0] * 1000).toLocaleDateString('en-CA')} {new Date(this.state.chart.x[0] * 1000).toLocaleTimeString({ hour12: false, hour: '2-digit', minute: '2-digit' })} - {new Date(this.state.chart.x.at(-1) * 1000).toLocaleTimeString({ hour12: false, hour: '2-digit', minute: '2-digit' })}</small></p>\r\n                     <ResponsiveContainer width={'90%'} height={300}>\r\n                        <AreaChart width={500} height={400} data={quotes} className=\"my-3 mx-3\">\r\n                           <CartesianGrid strokeDasharray=\"3 3\" />\r\n                           <XAxis dataKey=\"time\" tickLine={false} tickSize={8} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                           <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} orientation='right' tickLine={false} tickSize={0} axisLine={false} tick={{ fontSize: '0.8rem' }} />\r\n                           <Tooltip formatter={(value, name, props) => [value, \"\"]} separator={''} contentStyle={{ fontSize: '0.8rem' }} content={({ active, payload, label }) => {\r\n                              if (active && payload && payload.length) {\r\n                                 return (\r\n                                    <div className=\"custom-tooltip\" style={{ backgroundColor: '#ddd', fontSize: '0.8rem', padding: '0 0.5rem' }}>\r\n                                       <p className=\"label\">{`${label} - ${payload[0].value}`}</p>\r\n                                    </div>\r\n                                 );\r\n                              } else { return <></> }\r\n                           }} />\r\n                           <ReferenceLine\r\n                              y={previousClose}\r\n                              stroke=\"black\"\r\n                              strokeDasharray=\"3 3\"\r\n                              isOverflow='extendDomain'\r\n                           >\r\n                              <Label value={previousClose} position={\"bottom\"} fontSize={'0.8rem'} fontWeight={'bold'} />\r\n                           </ReferenceLine>\r\n\r\n                           <Area type=\"monotone\" dataKey=\"quote\" stroke=\"#8884d8\" fill={Math.round(this.state.chart.y.at(-1) * 100) / 100 > previousClose ? \"green\" : \"red\"} />\r\n                        </AreaChart>\r\n                     </ResponsiveContainer>\r\n                  </Modal.Body>\r\n               </Modal>}\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}