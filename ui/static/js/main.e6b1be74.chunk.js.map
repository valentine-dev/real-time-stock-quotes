{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","data","this","props","react_default","a","createElement","Table_default","striped","bordered","hover","responsive","display_DisplayHeader","display_DisplayBody","rows","Component","DisplayHeader","class","DisplayBody","map","row","index","dateTimeStr","Date","pricedata","lasttradedatetime","toLocaleString","changePercent","changepercent","toFixed","textColor","change","key","symbolstring","last","GetQuote","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getQuote","axios","get","state","symbol","token","then","res","quote","console","log","message","equityinfo","longname","exLgName","setState","objectSpread","errorMessage","handleSubmit","catch","err","response","status","headers","includes","handleInputChange","event","target","value","disableGet","undefined","length","displayError","displayMessage","Container_default","Form_default","autoComplete","onSubmit","e","preventDefault","Group","as","Row","controlId","Label","column","xs","Col_default","Control","type","onChange","Button_default","onClick","Alert_default","variant","App","latestQuotes","concat","toConsumableArray","Navbar_default","bg","sticky","expand","Brand","href","Heading","input","display","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6b1be74.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   render() {\r\n      const { data } = this.props;\r\n      return (\r\n         <Table striped bordered hover responsive>\r\n            <DisplayHeader />\r\n            <DisplayBody rows={data} />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr class=\"text-right\">\r\n            <th class=\"text-left\">Local Time</th>\r\n            <th>SYM</th>\r\n            <th>$</th>\r\n            <th>CHG</th>\r\n            <th>%</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateTimeStr = new Date(row.pricedata.lasttradedatetime).toLocaleString('en-CA');\r\n      const changePercent = row.pricedata.changepercent.toFixed(2) + \"%\";\r\n      const textColor = row.pricedata.change === 0 ? \"text-dark\"\r\n         : (row.pricedata.change > 0 ? \"text-success\" : \"text-danger\");\r\n\r\n      return (\r\n\r\n         <tr key={index} class=\"text-right\">\r\n            <td class=\"text-left\">{dateTimeStr}</td>\r\n            <td>{row.symbolstring}</td>\r\n            <td>{row.pricedata.last}</td>\r\n            <td class={textColor}>{row.pricedata.change}</td>\r\n            <td class={textColor}>{changePercent}</td>\r\n         </tr >\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { symbol: null, errorMessage: null, message: null }\r\n   }\r\n\r\n   getQuote = () => {\r\n      axios.get('/quote?symbol=' + this.state.symbol + '&token=' + this.props.token)\r\n         .then(res => {\r\n            const quote = res.data;\r\n            console.log(\"Got last price ... \");\r\n            console.log(quote);\r\n            const message = quote.symbolstring + ': ' + quote.equityinfo.longname + ' on ' + quote.key.exLgName;\r\n            this.setState({ ...this.state, \"errorMessage\": null, 'message': message });\r\n            this.props.handleSubmit(quote);\r\n         })\r\n         .catch(err => {\r\n            console.log(err);\r\n            if (err.response) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               console.log(err.response.data);\r\n               console.log(err.response.status);\r\n               console.log(err.response.headers);\r\n               const message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data; \r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Oops, something went wrong!\" });\r\n            }\r\n\r\n         });\r\n   }\r\n\r\n   handleInputChange = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value, \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayError = this.state.errorMessage === null ? false : true;\r\n      const displayMessage = this.state.message === null ? false : true;\r\n      return (\r\n         <Container>\r\n\r\n            <Form autoComplete=\"off\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                  <Form.Label column xs=\"2\">\r\n                     Quote:\r\n                  </Form.Label>\r\n                  <Col xs=\"8\">\r\n                     <Form.Control type=\"text\" onChange={this.handleInputChange} />\r\n                  </Col>\r\n                  {disableGet ? null : <Button xs=\"2\" onClick={this.getQuote}>GO</Button>}\r\n               </Form.Group>\r\n            </Form>\r\n            {displayMessage ? <Alert variant='info'>{this.state.message}</Alert> : null}\r\n            {displayError ? <Alert variant='warning'>{this.state.errorMessage}</Alert> : null}\r\n         </Container >\r\n      )\r\n   }\r\n}\r\nexport default GetQuote;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from './display';\nimport GetQuote from './input';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { latestQuotes: [] }\n   }\n\n   getQuote = quote => {\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes] });\n   }\n\n   render() {\n\n      return (\n         <Container>\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand>\n               <Navbar.Brand href=\"#home\">                  \n                  {'Valentine Wu - 2019'}\n               </Navbar.Brand>\n            </Navbar>\n            <Alert variant=\"success\">\n               <Alert.Heading>FREE Real-Time Stock Quotes for Companies Listed on TSX</Alert.Heading>\n               <p>\n                  For public companies on US exchanges, there would be 15 minutes delay (add \":US\" after symbol, like FTNT:US). Have fun!\n               </p>               \n            </Alert>\n            <GetQuote handleSubmit={this.getQuote} token='f37b9b0e53740ea44c387c024025e30b84573d4893c2f051455ba2258e5604c4' />\n            {this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\n         </Container>\n      );\n   }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}