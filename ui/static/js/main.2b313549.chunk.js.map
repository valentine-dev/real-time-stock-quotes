{"version":3,"sources":["display.js","input.js","index.js"],"names":["Display","data","this","props","react_default","a","createElement","Table_default","striped","bordered","hover","responsive","display_DisplayHeader","display_DisplayBody","rows","Component","DisplayHeader","class","DisplayBody","map","row","index","dateTimeStr","Date","pricedata","lasttradedatetime","toLocaleString","changePercent","changepercent","toFixed","textColor","change","key","symbolstring","last","GetQuote","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getQuote","axios","get","state","symbol","token","then","res","console","log","quote","message","equityinfo","longname","exLgName","setState","objectSpread","errorMessage","handleSubmit","name","catch","err","response","status","headers","includes","handleInputChange","event","target","value","disableGet","undefined","length","displayError","displayMessage","Container_default","Form_default","autoComplete","onSubmit","e","preventDefault","Group","as","Row","Label","column","xs","className","Col_default","Control","type","onChange","placeholder","Button_default","onClick","Alert_default","variant","require","config","App","latestQuotes","concat","toConsumableArray","handleClose","showModal","handleSave","form","current","reportValidity","tokenValue","tokenInput","handleShow","process","React","createRef","Navbar_default","bg","sticky","expand","Brand","href","Toggle","Collapse","Heading","input","display","Modal_default","show","centered","onHide","Header","closeButton","Title","Body","ref","required","block","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b313549.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass Display extends Component {\r\n   render() {\r\n      const { data } = this.props;\r\n      return (\r\n         <Table striped bordered hover responsive>\r\n            <DisplayHeader />\r\n            <DisplayBody rows={data} />\r\n         </Table>\r\n      )\r\n   }\r\n}\r\n\r\nconst DisplayHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr class=\"text-right\">\r\n            <th class=\"text-left\">Local Time</th>\r\n            <th>SYM</th>\r\n            <th>$</th>\r\n            <th>CHG</th>\r\n            <th>%</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n};\r\n\r\nconst DisplayBody = props => {\r\n   const rows = props.rows.map((row, index) => {\r\n\r\n      const dateTimeStr = new Date(row.pricedata.lasttradedatetime).toLocaleString('en-CA');\r\n      const changePercent = row.pricedata.changepercent.toFixed(2) + \"%\";\r\n      const textColor = row.pricedata.change === 0 ? \"text-dark\"\r\n         : (row.pricedata.change > 0 ? \"text-success\" : \"text-danger\");\r\n\r\n      return (\r\n\r\n         <tr key={index} class=\"text-right\">\r\n            <td class=\"text-left\">{dateTimeStr}</td>\r\n            <td>{row.symbolstring}</td>\r\n            <td>{row.pricedata.last}</td>\r\n            <td class={textColor}>{row.pricedata.change}</td>\r\n            <td class={textColor}>{changePercent}</td>\r\n         </tr >\r\n      )\r\n   });\r\n\r\n   return <tbody>{rows}</tbody>\r\n};\r\n\r\n\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\n\r\nclass GetQuote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { symbol: null, errorMessage: null, message: null }\r\n   }\r\n\r\n   getQuote = () => {\r\n      axios.get('/quote?symbol=' + this.state.symbol + '&token=' + this.props.token)\r\n         .then(res => {\r\n            console.log(res);\r\n            const quote = res.data;\r\n            console.log(quote);\r\n            if (quote && quote.pricedata && quote.pricedata.last) {\r\n               console.log(\"Got last price ... \");\r\n               const message = quote.symbolstring + ': ' + quote.equityinfo.longname + ' on ' + quote.key.exLgName;\r\n               this.setState({ ...this.state, \"errorMessage\": null, 'message': message });\r\n               this.props.handleSubmit(quote);\r\n            } else if (quote && quote.name === 'Error') {\r\n               const message = quote.name + \": \" + quote.message;\r\n               console.log(message);\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Oops, something went wrong!\" });\r\n            }\r\n         })\r\n         .catch(err => {\r\n            console.log(err);\r\n            if (err.response) {\r\n               // The request was made and the server responded with a status code\r\n               // that falls out of the range of 2xx\r\n               console.log(err.response.data);\r\n               console.log(err.response.status);\r\n               console.log(err.response.headers);\r\n               let message;\r\n               if (typeof err.response.data === 'string') {\r\n                  message = err.response.data.includes('Cannot GET /quote') ? 'The API backend is not available. Please have a check.' : 'HTTP ' + err.response.status + ': ' + err.response.data;\r\n               } else if (typeof err.response.data === 'object') {\r\n                  message = err.response.data.name + \": \" + err.response.data.message;\r\n               } else {\r\n                  message = \"Oops, something went wrong!\";\r\n               }\r\n               this.setState({ ...this.state, \"errorMessage\": message });\r\n            } else {\r\n               this.setState({ ...this.state, \"errorMessage\": \"Oops, something went wrong!\" });\r\n            }\r\n\r\n         });\r\n   }\r\n\r\n   handleInputChange = (event) => {\r\n      this.setState({ ...this.state, \"symbol\": event.target.value, \"errorMessage\": null, \"message\": null });\r\n   }\r\n\r\n   render() {\r\n\r\n      let disableGet = true;\r\n      if (this.state.symbol !== undefined && this.state.symbol !== null && this.state.symbol.length > 0) {\r\n         disableGet = false;\r\n      }\r\n\r\n      const displayError = this.state.errorMessage === null ? false : true;\r\n      const displayMessage = this.state.message === null ? false : true;\r\n      return (\r\n         <Container>\r\n            <Form autoComplete=\"off\" onSubmit={e => e.preventDefault()} >\r\n               <Form.Group as={Row} >\r\n                  <Form.Label column xs=\"2\" className=\"d-flex justify-content-end\">\r\n                     Quote:\r\n                  </Form.Label>\r\n                  <Col xs=\"8\">\r\n                     <Form.Control type=\"text\" onChange={this.handleInputChange} placeholder=\"Enter a symbol like RBA, FTNT:US, or J:CNX\" />\r\n                  </Col>\r\n                  {disableGet ? null : <Col xs=\"2\"><Button onClick={this.getQuote}>GO</Button></Col>}\r\n               </Form.Group>\r\n            </Form>\r\n            {displayMessage ? <Alert variant='info'>{this.state.message}</Alert> : null}\r\n            {displayError ? <Alert variant='warning'>{this.state.errorMessage}</Alert> : null}\r\n         </Container>\r\n      )\r\n   }\r\n}\r\nexport default GetQuote;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from './display';\nimport GetQuote from './input';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nrequire('dotenv').config();\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { latestQuotes: [], showModal: false, token: process.env.REACT_APP_TOKEN }\n      this.tokenInput = React.createRef();\n      this.form = React.createRef();\n   }\n\n   getQuote = quote => {\n      this.setState({ latestQuotes: [quote, ...this.state.latestQuotes] });\n   }\n\n   handleClose = () => {\n      this.setState({ showModal: false });\n   }\n\n   handleSave = () => {\n      if (!this.form.current.reportValidity()) return;\n      const tokenValue = this.tokenInput.current.value;\n      this.setState({ showModal: false, token: tokenValue });\n   }\n\n   handleShow = () => {\n      this.setState({ showModal: true });\n   }\n   render() {\n\n      const token = this.state.token;\n      return (\n         <Container>\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand>\n               <Navbar.Brand href=\"#home\">\n                  {'Valentine Wu - 2019'}\n               </Navbar.Brand>\n               <Navbar.Toggle />\n               <Navbar.Collapse className=\"justify-content-end\">\n                  <Button variant=\"outline-success\" onClick={this.handleShow} >Settings</Button>\n               </Navbar.Collapse>\n            </Navbar>\n            <Alert variant=\"success\">\n               <Alert.Heading>FREE Real-Time Stock Quotes for Companies Listed on TSX</Alert.Heading>\n               <p>\n                  For US exchanges, append <code>:us</code>, like <code>FTNT:US</code>.\n               </p>\n               <hr />\n               <p>\n                  For Canadian Securities Exchange, append <code>:cnx</code>, like <code>J:CNX</code>.\n               </p>\n            </Alert>\n            <GetQuote handleSubmit={this.getQuote} token={token} />\n            {this.state.latestQuotes.length > 0 ? <Display data={this.state.latestQuotes} /> : null}\n\n            <Modal show={this.state.showModal} centered onHide={this.handleClose}>\n               <Modal.Header closeButton>\n                  <Modal.Title>Please enter access token</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Form autoComplete=\"off\" onSubmit={e => e.preventDefault()} ref={this.form}>\n                     <Form.Group>\n                        <Form.Control ref={this.tokenInput} as=\"input\" type=\"text\" placeholder=\"Enter access token\" required />\n                     </Form.Group>\n                     <Button variant=\"primary\" onClick={this.handleSave} block>Save</Button>\n                  </Form>\n               </Modal.Body>\n            </Modal>\n         </Container>\n      );\n   }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}